<?xml version="1.0"?>
<configuration>

  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <section name="ThreadPoolSection" type="Forge.Threading.ConfigSection.ThreadPoolSection, Forge.Base, Culture=neutral, PublicKeyToken=97960309cfe8d317" allowLocation="true" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="false" requirePermission="true"/>
    <section name="TerraGrafSection" type="Forge.Net.TerraGraf.ConfigSection.TerraGrafSection, Forge.Net.TerraGraf, Culture=neutral, PublicKeyToken=97960309cfe8d317" allowLocation="true" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" requirePermission="true"/>
    <section name="RemotingSection" type="Forge.Net.Remoting.ConfigSection.RemotingSection, Forge.Net.Remoting, Culture=neutral, PublicKeyToken=97960309cfe8d317" allowLocation="true" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="false" requirePermission="true"/>
    <section name="NetworkServiceSection" type="Forge.Net.Services.ConfigSection.NetworkServiceSection, Forge.Net.Services, Culture=neutral, PublicKeyToken=97960309cfe8d317" allowLocation="true" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="false" requirePermission="true"/>
    <section name="RemoteDesktopSection" type="Forge.RemoteDesktop.ConfigSection.RemoteDesktopSection, Forge.RemoteDesktop, Culture=neutral, PublicKeyToken=97960309cfe8d317" allowLocation="true" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" requirePermission="true"/>
  </configSections>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2"/>
  </startup>

  <appSettings>
    <add key="log4net.Internal.Debug" value="false"/>
    <add key="ApplicationID" value="$MachineName_$UserName_RemoteDesktopTestClient"/>
  </appSettings>

  <RemoteDesktopSection>
    <CategoryPropertyItems>

      <add id="Certificate">
        <PropertyItems>

          <!-- Store/File -->
          <add id="CertificateSource" entryValue="Store"/>

          <!-- Use this settings when you get certificate from your computer store -->
          <!-- Name of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreName enum values. Default is My. -->
          <add id="StoreName" entryValue="My"/>
          <!-- Scope of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreLocation enum values. Default is CurrentUser. -->
          <!-- LocalMachine / CurrentUser -->
          <add id="StoreLocation" entryValue="LocalMachine"/>
          <!-- The subject of the certificate to find. Required. -->
          <add id="Subject" entryValue="CN=ForgeNET"/>

          <!-- Use this settings when you get certificate from a local file -->
          <add id="CertificateFile" entryValue="ForgeNET.pfx"/>
          <!-- Password for the certificate -->
          <add id="Password" entryValue=""/>

        </PropertyItems>
      </add>

      <add id="Client">
        <PropertyItems>

          <!-- The mouse move event sending to client period -->
          <add id="MouseMoveSendInterval" entryValue="500"/>

        </PropertyItems>
      </add>

    </CategoryPropertyItems>
  </RemoteDesktopSection>

  <NetworkServiceSection>
    <CategoryPropertyItems>

      <add id="Locators">
        <PropertyItems>
          <add id="RemoteDesktopApplication" entryValue="ChannelRemoteDesktopConnect"/>
        </PropertyItems>
      </add>

    </CategoryPropertyItems>
  </NetworkServiceSection>

  <RemotingSection>
    <CategoryPropertyItems>

      <add id="Settings">
        <PropertyItems>
          <!-- Csatornák automatikus betöltése indításkor -->
          <add id="AutomaticallyLoadChannels" entryValue="true"/>
        </PropertyItems>
      </add>

      <add id="Services">
        <PropertyItems>
        </PropertyItems>
      </add>

      <add id="Clients">
        <PropertyItems>
        </PropertyItems>
      </add>

      <add id="Channels">
        <PropertyItems>

          <!-- A session nem újra felhasználható -->
          <add id="ChannelRemoteDesktopConnect" entryValue="Forge.Net.Remoting.Channels.TCPChannel, Forge.Net.Remoting">
            <PropertyItems>
              <add id="RemoteAddress" entryValue="127.0.0.1:47300"/>
              
              <add id="NetworkFactoryType" entryValue="Forge.Net.TerraGraf.TerraGrafNetworkFactory, Forge.Net.TerraGraf"/>

              <add id="ServerStreamFactoryType" entryValue="Forge.Net.Synapse.NetworkFactory.SslServerStreamFactory, Forge.Net.Synapse">
                <PropertyItems>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveBufferSize" entryValue="32768"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendBufferSize" entryValue="32768"/>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveTimeout" entryValue="-1"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendTimeout" entryValue="120000"/>
                  <!-- Socket NoDelay -->
                  <add id="NoDelay" entryValue="true"/>

                  <!-- Store/File/GenerateNew -->
                  <add id="CertificateSource" entryValue="GenerateNew"/>

                  <!-- Use this settings when you get certificate from your computer store -->
                  <!-- Name of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreName enum values. Default is My. -->
                  <add id="StoreName" entryValue="My"/>
                  <!-- Scope of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreLocation enum values. Default is CurrentUser. -->
                  <!-- LocalMachine / CurrentUser -->
                  <add id="StoreLocation" entryValue="LocalMachine"/>
                  <!-- The subject of the certificate to find. Required. -->
                  <add id="Subject" entryValue="CN=ForgeNET"/>

                  <!-- Use this settings when you get certificate from a local file -->
                  <add id="CertificateFile" entryValue="ForgeNET.pfx"/>
                  <!-- Password for the certificate -->
                  <add id="Password" entryValue=""/>

                </PropertyItems>
              </add>

              <add id="ClientStreamFactoryType" entryValue="Forge.Net.Synapse.NetworkFactory.SslClientStreamFactory, Forge.Net.Synapse">
                <PropertyItems>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveBufferSize" entryValue="32768"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendBufferSize" entryValue="32768"/>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveTimeout" entryValue="-1"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendTimeout" entryValue="120000"/>
                  <!-- Socket NoDelay -->
                  <add id="NoDelay" entryValue="false"/>
                  <!-- Same as the subject name on the server certificate -->
                  <add id="ServerNameOnCertificate" entryValue="ForgeNET"/>
                  <!-- Skip the errors of the SSL Policy and continue. This means lower security, but ideal for development. Default is false. -->
                  <add id="SkipSslPolicyErrors" entryValue="true"/>
                </PropertyItems>
              </add>

              <add id="SessionReusable" entryValue="false"/>
              <add id="DefaultErrorResponseTimeout" entryValue="60000"/>
              <add id="MaxSendMessageSize" entryValue="5242880"/>
              <add id="MaxReceiveMessageSize" entryValue="5242880"/>
              <add id="MaxSendStreamSize" entryValue="2147483647"/>
              <add id="MaxReceiveStreamSize" entryValue="2147483647"/>
              <add id="TempStreamStorageFolder" entryValue="StorageFolders\TempStreams"/>
              <add id="SendSinks">
                <PropertyItems>
                  <add id="0" entryValue="Forge.Net.Remoting.Sinks.BinarySerializerMessageSink, Forge.Net.Remoting">
                    <PropertyItems>
                      <add id="CompressData" entryValue="false"/>
                      <add id="CompressDataOverSize" entryValue="1024"/>
                    </PropertyItems>
                  </add>
                </PropertyItems>
              </add>
              <add id="ReceiveSinks">
                <PropertyItems>
                  <add id="0" entryValue="Forge.Net.Remoting.Sinks.BinarySerializerMessageSink, Forge.Net.Remoting">
                    <PropertyItems>
                      <add id="CompressData" entryValue="false"/>
                      <add id="CompressDataOverSize" entryValue="1024"/>
                    </PropertyItems>
                  </add>
                </PropertyItems>
              </add>

            </PropertyItems>
          </add>

          <add id="ChannelReceiveConnection" entryValue="Forge.Net.Remoting.Channels.TCPChannel, Forge.Net.Remoting">
            <PropertyItems>
              <add id="BaseAddresses">
                <PropertyItems>
                  <add id="0" entryValue="127.0.0.1:47200"/>
                </PropertyItems>
              </add>
              <add id="NetworkFactoryType" entryValue="Forge.Net.TerraGraf.TerraGrafNetworkFactory, Forge.Net.TerraGraf"/>

              <add id="ServerStreamFactoryType" entryValue="Forge.Net.Synapse.NetworkFactory.SslServerStreamFactory, Forge.Net.Synapse">
                <PropertyItems>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveBufferSize" entryValue="8192"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendBufferSize" entryValue="8192"/>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveTimeout" entryValue="-1"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendTimeout" entryValue="120000"/>
                  <!-- Socket NoDelay -->
                  <add id="NoDelay" entryValue="false"/>

                  <!-- Store/File/GenerateNew -->
                  <add id="CertificateSource" entryValue="GenerateNew"/>

                  <!-- Use this settings when you get certificate from your computer store -->
                  <!-- Name of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreName enum values. Default is My. -->
                  <add id="StoreName" entryValue="My"/>
                  <!-- Scope of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreLocation enum values. Default is CurrentUser. -->
                  <!-- LocalMachine / CurrentUser -->
                  <add id="StoreLocation" entryValue="LocalMachine"/>
                  <!-- The subject of the certificate to find. Required. -->
                  <add id="Subject" entryValue="CN=ForgeNET"/>

                  <!-- Use this settings when you get certificate from a local file -->
                  <add id="CertificateFile" entryValue="ForgeNET.pfx"/>
                  <!-- Password for the certificate -->
                  <add id="Password" entryValue=""/>

                </PropertyItems>
              </add>

              <add id="ClientStreamFactoryType" entryValue="Forge.Net.Synapse.NetworkFactory.SslClientStreamFactory, Forge.Net.Synapse">
                <PropertyItems>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveBufferSize" entryValue="8192"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendBufferSize" entryValue="8192"/>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveTimeout" entryValue="-1"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendTimeout" entryValue="120000"/>
                  <!-- Socket NoDelay -->
                  <add id="NoDelay" entryValue="false"/>
                  <!-- Same as the subject name on the server certificate -->
                  <add id="ServerNameOnCertificate" entryValue="ForgeNET"/>
                  <!-- Skip the errors of the SSL Policy and continue. This means lower security, but ideal for development. Default is false. -->
                  <add id="SkipSslPolicyErrors" entryValue="true"/>
                </PropertyItems>
              </add>

              <add id="SessionReusable" entryValue="true"/>
              <add id="DefaultErrorResponseTimeout" entryValue="60000"/>
              <add id="MaxSendMessageSize" entryValue="5242880"/>
              <add id="MaxReceiveMessageSize" entryValue="5242880"/>
              <add id="MaxSendStreamSize" entryValue="268435456"/>
              <add id="MaxReceiveStreamSize" entryValue="268435456"/>
              <add id="TempStreamStorageFolder" entryValue="StorageFolders\TempStreams"/>
              <add id="SendSinks">
                <PropertyItems>
                  <add id="0" entryValue="Forge.Net.Remoting.Sinks.BinarySerializerMessageSink, Forge.Net.Remoting">
                    <PropertyItems>
                      <add id="CompressData" entryValue="true"/>
                      <add id="CompressDataOverSize" entryValue="1024"/>
                    </PropertyItems>
                  </add>
                </PropertyItems>
              </add>
              <add id="ReceiveSinks">
                <PropertyItems>
                  <add id="0" entryValue="Forge.Net.Remoting.Sinks.BinarySerializerMessageSink, Forge.Net.Remoting">
                    <PropertyItems>
                      <add id="CompressData" entryValue="true"/>
                      <add id="CompressDataOverSize" entryValue="1024"/>
                    </PropertyItems>
                  </add>
                </PropertyItems>
              </add>
            </PropertyItems>
          </add>

          <add id="ChannelConnectToMaster" entryValue="Forge.Net.Remoting.Channels.TCPChannel, Forge.Net.Remoting">
            <PropertyItems>
              <add id="RemoteAddress" entryValue="127.0.0.1:47000"/>
              <add id="NetworkFactoryType" entryValue="Forge.Net.TerraGraf.TerraGrafNetworkFactory, Forge.Net.TerraGraf"/>

              <add id="ServerStreamFactoryType" entryValue="Forge.Net.Synapse.NetworkFactory.SslServerStreamFactory, Forge.Net.Synapse">
                <PropertyItems>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveBufferSize" entryValue="8192"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendBufferSize" entryValue="8192"/>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveTimeout" entryValue="-1"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendTimeout" entryValue="120000"/>
                  <!-- Socket NoDelay -->
                  <add id="NoDelay" entryValue="false"/>

                  <!-- Store/File/GenerateNew -->
                  <add id="CertificateSource" entryValue="GenerateNew"/>

                  <!-- Use this settings when you get certificate from your computer store -->
                  <!-- Name of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreName enum values. Default is My. -->
                  <add id="StoreName" entryValue="My"/>
                  <!-- Scope of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreLocation enum values. Default is CurrentUser. -->
                  <!-- LocalMachine / CurrentUser -->
                  <add id="StoreLocation" entryValue="LocalMachine"/>
                  <!-- The subject of the certificate to find. Required. -->
                  <add id="Subject" entryValue="CN=ForgeNET"/>

                  <!-- Use this settings when you get certificate from a local file -->
                  <add id="CertificateFile" entryValue="ForgeNET.pfx"/>
                  <!-- Password for the certificate -->
                  <add id="Password" entryValue=""/>

                </PropertyItems>
              </add>

              <add id="ClientStreamFactoryType" entryValue="Forge.Net.Synapse.NetworkFactory.SslClientStreamFactory, Forge.Net.Synapse">
                <PropertyItems>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveBufferSize" entryValue="8192"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendBufferSize" entryValue="8192"/>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveTimeout" entryValue="-1"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendTimeout" entryValue="120000"/>
                  <!-- Socket NoDelay -->
                  <add id="NoDelay" entryValue="false"/>
                  <!-- Same as the subject name on the server certificate -->
                  <add id="ServerNameOnCertificate" entryValue="ForgeNET"/>
                  <!-- Skip the errors of the SSL Policy and continue. This means lower security, but ideal for development. Default is false. -->
                  <add id="SkipSslPolicyErrors" entryValue="true"/>
                </PropertyItems>
              </add>

              <add id="SessionReusable" entryValue="true"/>
              <add id="DefaultErrorResponseTimeout" entryValue="60000"/>
              <add id="MaxSendMessageSize" entryValue="5242880"/>
              <add id="MaxReceiveMessageSize" entryValue="5242880"/>
              <add id="MaxSendStreamSize" entryValue="268435456"/>
              <add id="MaxReceiveStreamSize" entryValue="268435456"/>
              <add id="TempStreamStorageFolder" entryValue="StorageFolders\TempStreams"/>
              <add id="SendSinks">
                <PropertyItems>
                  <add id="0" entryValue="Forge.Net.Remoting.Sinks.BinarySerializerMessageSink, Forge.Net.Remoting">
                    <PropertyItems>
                      <add id="CompressData" entryValue="true"/>
                      <add id="CompressDataOverSize" entryValue="1024"/>
                    </PropertyItems>
                  </add>
                </PropertyItems>
              </add>
              <add id="ReceiveSinks">
                <PropertyItems>
                  <add id="0" entryValue="Forge.Net.Remoting.Sinks.BinarySerializerMessageSink, Forge.Net.Remoting">
                    <PropertyItems>
                      <add id="CompressData" entryValue="true"/>
                      <add id="CompressDataOverSize" entryValue="1024"/>
                    </PropertyItems>
                  </add>
                </PropertyItems>
              </add>

            </PropertyItems>
          </add>

          <!-- The only difference the session not reusable -->
          <add id="ChannelConnectToMasterForStreams" entryValue="Forge.Net.Remoting.Channels.TCPChannel, Forge.Net.Remoting">
            <PropertyItems>
              <add id="RemoteAddress" entryValue="127.0.0.1:47000"/>
              <add id="NetworkFactoryType" entryValue="Forge.Net.TerraGraf.TerraGrafNetworkFactory, Forge.Net.TerraGraf"/>

              <add id="ServerStreamFactoryType" entryValue="Forge.Net.Synapse.NetworkFactory.SslServerStreamFactory, Forge.Net.Synapse">
                <PropertyItems>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveBufferSize" entryValue="8192"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendBufferSize" entryValue="8192"/>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveTimeout" entryValue="-1"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendTimeout" entryValue="120000"/>
                  <!-- Socket NoDelay -->
                  <add id="NoDelay" entryValue="false"/>

                  <!-- Store/File/GenerateNew -->
                  <add id="CertificateSource" entryValue="GenerateNew"/>

                  <!-- Use this settings when you get certificate from your computer store -->
                  <!-- Name of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreName enum values. Default is My. -->
                  <add id="StoreName" entryValue="My"/>
                  <!-- Scope of the certificate store. Values are System.Security.Cryptography.X509Certificates.StoreLocation enum values. Default is CurrentUser. -->
                  <!-- LocalMachine / CurrentUser -->
                  <add id="StoreLocation" entryValue="LocalMachine"/>
                  <!-- The subject of the certificate to find. Required. -->
                  <add id="Subject" entryValue="CN=ForgeNET"/>

                  <!-- Use this settings when you get certificate from a local file -->
                  <add id="CertificateFile" entryValue="ForgeNET.pfx"/>
                  <!-- Password for the certificate -->
                  <add id="Password" entryValue=""/>

                </PropertyItems>
              </add>

              <add id="ClientStreamFactoryType" entryValue="Forge.Net.Synapse.NetworkFactory.SslClientStreamFactory, Forge.Net.Synapse">
                <PropertyItems>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveBufferSize" entryValue="8192"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendBufferSize" entryValue="8192"/>
                  <!-- Socket ReceiveBufferSize -->
                  <add id="ReceiveTimeout" entryValue="-1"/>
                  <!-- Socket SendBufferSize -->
                  <add id="SendTimeout" entryValue="120000"/>
                  <!-- Socket NoDelay -->
                  <add id="NoDelay" entryValue="false"/>
                  <!-- Same as the subject name on the server certificate -->
                  <add id="ServerNameOnCertificate" entryValue="ForgeNET"/>
                  <!-- Skip the errors of the SSL Policy and continue. This means lower security, but ideal for development. Default is false. -->
                  <add id="SkipSslPolicyErrors" entryValue="true"/>
                </PropertyItems>
              </add>

              <add id="SessionReusable" entryValue="false"/>
              <add id="DefaultErrorResponseTimeout" entryValue="60000"/>
              <add id="MaxSendMessageSize" entryValue="5242880"/>
              <add id="MaxReceiveMessageSize" entryValue="5242880"/>
              <add id="MaxSendStreamSize" entryValue="268435456"/>
              <add id="MaxReceiveStreamSize" entryValue="268435456"/>
              <add id="TempStreamStorageFolder" entryValue="StorageFolders\TempStreams"/>
              <add id="SendSinks">
                <PropertyItems>
                  <add id="0" entryValue="Forge.Net.Remoting.Sinks.BinarySerializerMessageSink, Forge.Net.Remoting">
                    <PropertyItems>
                      <add id="CompressData" entryValue="true"/>
                      <add id="CompressDataOverSize" entryValue="1024"/>
                    </PropertyItems>
                  </add>
                </PropertyItems>
              </add>
              <add id="ReceiveSinks">
                <PropertyItems>
                  <add id="0" entryValue="Forge.Net.Remoting.Sinks.BinarySerializerMessageSink, Forge.Net.Remoting">
                    <PropertyItems>
                      <add id="CompressData" entryValue="true"/>
                      <add id="CompressDataOverSize" entryValue="1024"/>
                    </PropertyItems>
                  </add>
                </PropertyItems>
              </add>

            </PropertyItems>
          </add>

        </PropertyItems>
      </add>
    </CategoryPropertyItems>
  </RemotingSection>

  <TerraGrafSection>
    <CategoryPropertyItems>

      <add id="Settings">
        <PropertyItems>

          <!-- Ha ez az opció aktív, akkor ez a kliens letagad minden kapcsolatot, még a saját Network Context-jáben lévőket is -->
          <!-- Ennek az lesz a következménye, hogy ezt a kliens nem fogják átmenő forgalommal terhelni, ellenben a hálózat -->
          <!-- áteresztő képessége és átjárhatósága csökken. -->
          <add id="BlackHole" entryValue="false"/>

          <!-- Csatlakozás alapértelmezett érték miliszekundumban. 0-tól nagyobb szám -->
          <add id="DefaultConnectionTimeoutInMS" entryValue="120000"/>

          <!-- Több párhuzamos fizikai kapcsolat engedélyezése egy hálózati résztvevővel -->
          <add id="EnableMultipleConnectionWithNetworkPeers" entryValue="true"/>

          <!-- Agresszív kapcsolatépítés a hálózati résztvevőkkel -->
          <add id="EnableAgressiveConnectionEstablishment" entryValue="true"/>

          <!-- Párhuzamos kapcsolatépíthetőség esetén, a kapcsolatok maximális száma -->
          <add id="MaxConnectionsWithNetworkPeers" entryValue="2"/>

          <!-- Felülírhatjuk, hogy a rendszer hányszor engedjen továbbítani egy keringő, gazdátlan üzenetet -->
          <add id="MaxMessagePassageNumber" entryValue="3"/>

          <!-- IPV6 protokol engedélyezése -->
          <add id="EnableIPV6" entryValue="true"/>

          <!-- Listener socket queue-jában várakozó bejövő, de még nem fogadott kapcsolatok timeout értéke. Egy bejövő kapcsolat ennyi idő után timeoutol el, ha nem fogadom. -->
          <add id="DefaultSocketAcceptTimeWaitInMS" entryValue="60000"/>

          <!-- Listener socket queue maximális mérete. Maximum az itt beállított mennyiségű bejövő és feldolgozásra váró kapcsolat lehet a queue-ban. -->
          <add id="DefaultSocketBacklogSize" entryValue="256"/>

          <!-- Alapértelmezett keep alive time érték az alacsony szintű socket-eknek -->
          <add id="DefaultLowLevelSocketKeepAliveTime" entryValue="60000"/>

          <!-- Alapértelmezett keep alive time interval érték az alacsony szintű socket-eknek -->
          <add id="DefaultLowLevelSocketKeepAliveTimeInterval" entryValue="1000"/>

          <!-- Alapértelmezett fogadó buffer mérete az alacsony szintű socket-eknek -->
          <add id="DefaultLowLevelSocketReceiveBufferSize" entryValue="8192"/>

          <!-- Alapértelmezett küldő buffer mérete az alacsony szintű socket-eknek -->
          <add id="DefaultLowLevelSocketSendBufferSize" entryValue="8192"/>

          <!-- Nagle algoritmus engedélyezése/tiltása. Ha engedélyezzük, az adatgyűjtő algoritmus kikapcsol. -->
          <add id="DefaultLowLevelNoDelay" entryValue="true"/>
          
          <!-- Alapértelmezett fogadó buffer mérete a magas szintű socket-eknek -->
          <add id="DefaultReceiveBufferSize" entryValue="8192"/>

          <!-- Alapértelmezett küldő buffer mérete a magas szintű socket-eknek -->
          <add id="DefaultSendBufferSize" entryValue="8192"/>

          <!-- Párhuzamos csatlakozási kérések maximális száma a magas szintű socketeken. -->
          <add id="DefaultConcurrentSocketConnectionAttempts" entryValue="10"/>

          <!-- Alapértelmezett timeout érték az alacsony szintű és a magas szintű socket-eknek, ami azt mondja meg, hogy mennyi ideig vár egy blokkolt socket bejövő adatra -->
          <add id="DefaultReceiveTimeoutInMS" entryValue="-1"/>

          <!-- Alapértelmezett timeout érték az alacsony szintű és a magas szintű socket-eknek, ami azt mondja meg, hogy mennyi ideig vár egy blokkolt socket az adat elküldésére -->
          <add id="DefaultSendTimeoutInMS" entryValue="-1"/>

          <!-- Add application to the Windows Firewall -->
          <add id="AddWindowsFirewallException" entryValue="true"/>

        </PropertyItems>
      </add>

      <add id="NetworkPeering">
        <PropertyItems>

          <!-- NAT gateway-ek listája. A routeren beállított DynDNS és port forward szabályokat -->
          <!-- ki lehet publikálni. Ekkor a külső hálózatokból érkező peer-ek is be tudnak kapcsolódni -->
          <add id="NAT_Gateways">
            <PropertyItems>
              <!--add id="0" entryValue="jzo.ddns.net:17625" /-->
            </PropertyItems>
          </add>

          <!-- TCP szerverek listája -->
          <add id="TCPServers">
            <PropertyItems>

              <!-- Megadhatjuk, hogy automatikusan válasszon portot és interface-t -->
              <add id="Auto" entryValue="true">
                <PropertyItems>
                  <!-- Ha az automatika tiltva van, akkor itt kézzel megadhatjuk, hogy mely interface-eken és portokon figyeljen -->
                  <!--add id="0" entryValue="0.0.0.0:52000" /-->
                </PropertyItems>
              </add>

            </PropertyItems>
          </add>

          <!-- Megadhatunk fix listát is, hogy hová próbálkozzon csatlakozni -->
          <add id="TCP_Connections">
            <PropertyItems>

              <add id="0" entryValue="192.168.0.104:52000">
                <PropertyItems>
                  <add id="ReconnectOnFailure" entryValue="true"/>
                  <add id="DelayBetweenAttempsInMS" entryValue="10000"/>
                  <add id="ConnectionTimeout" entryValue="-1"/>
                </PropertyItems>
              </add>

            </PropertyItems>
          </add>

          <!-- Engedélyezzük az UDP felderítést -->
          <add id="UDP_Detection" entryValue="false">
            <PropertyItems>

              <!-- Broadcast/Multicast -->
              <add id="DetectionMode" entryValue="Broadcast"/>
              <add id="IPv4MulticastAddress" entryValue="239.0.0.222"/>
              <add id="IPv6MulticastAddress" entryValue="ff00::118"/>

              <!-- A felsorolt portok közül, az első szabad portra, amit talál ráül és figyel -->
              <add id="Broadcast_Listening_Ports">
                <PropertyItems>
                  <add id="0" entryValue="48600"/>
                  <add id="1" entryValue="48601"/>
                  <add id="2" entryValue="48602"/>
                </PropertyItems>
              </add>

              <!-- A peer-ek keresésekor az alábbi portokra küld ki üzenetet a broadcast címen -->
              <add id="Broadcast_Target_Ports">
                <PropertyItems>
                  <add id="0" entryValue="48600"/>
                  <add id="1" entryValue="48601"/>
                  <add id="2" entryValue="48602"/>
                </PropertyItems>
              </add>

            </PropertyItems>
          </add>

          <!-- Engedélyezzük az NATUPnP szolgáltatást -->
          <add id="NETUPnP" entryValue="true">
            <PropertyItems>
              <!-- Amennyiben a rendszer másképpen nem tudja eldönteni, hogy melyik az aktív kimenő internet kapcsolat,
                  egy próbacsatlakozást hajt végre. Ha a csatlakozás sikeres, a helyi interface-t használja fel az UPnP router konfiguráláshoz.
                  A szolgáltatás nem működik, ha nincs legalább egy sikeresen megnyitott TCP szerver.
              -->
              <add id="ProbeAddressToDetectGatewayNetworkInterface" entryValue="www.google.com:80"/>
            </PropertyItems>
          </add>

        </PropertyItems>
      </add>

      <!-- Saját context nevem definiálása -->
      <add id="NetworkContext" entryValue="RemoteDesktopTestGroup">
        <PropertyItems>
          <!-- Context-ek szeparálhatóságának beállítása -->
          <add id="Separation" entryValue="true">
            <PropertyItems>

              <!-- WhiteList used when the separation enabled -->
              <add id="WhiteList">
                <PropertyItems>
                  <add id="Rule0" entryName="RemoteDesktopTestGroup" entryValue="*"/>
                </PropertyItems>
              </add>

              <!-- BlackList used when the separation disabled -->
              <add id="BlackList">
                <PropertyItems>
                </PropertyItems>
              </add>

            </PropertyItems>
          </add>
        </PropertyItems>
      </add>

    </CategoryPropertyItems>
  </TerraGrafSection>

  <ThreadPoolSection>
    <ThreadPools>
      <add minThreadNumber="1" maxThreadNumber="100" shutDownIdleThreadTime="120000" maxStackSize="0" setReadOnly="false"/>
      <add name="TerraGraf_Network_Send" minThreadNumber="4" maxThreadNumber="200" shutDownIdleThreadTime="120000" maxStackSize="0" setReadOnly="false"/>
      <add name="TerraGraf_Network_Connection" minThreadNumber="1" maxThreadNumber="5" shutDownIdleThreadTime="120000" maxStackSize="0" setReadOnly="false"/>
      <add name="TerraGraf_Network_BroadcastServer" minThreadNumber="1" maxThreadNumber="5" shutDownIdleThreadTime="120000" maxStackSize="0" setReadOnly="false"/>
    </ThreadPools>
  </ThreadPoolSection>

  <log4net debug="true">
    
    <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender">
      <param name="LogName" value="RemoteDesktopClientTest"/>
      <param name="ApplicationName" value="RemoteDesktopClientTest"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d %-5p [%t] [%c] - %m%n"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="ERROR"/>
        <param name="LevelMax" value="FATAL"/>
      </filter>
    </appender>
    
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="c:\LogFiles\RemoteDesktopClientTest.log"/>
      <appendToFile value="false"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="5"/>
      <maximumFileSize value="100MB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d %-5p [%t] [%c] - %m%n"/>
      </layout>
    </appender>
    
    <root>
      <appender-ref ref="EventLogAppender"/>
      <appender-ref ref="RollingLogFileAppender"/>
    </root>
    
    <category name="Forge.Net">
      <priority value="Info"/>
    </category>

    <category name="Forge.RemoteDesktop">
      <priority value="Debug"/>
    </category>

    <category name="Forge.Threading">
      <priority value="Error"/>
    </category>
    
  </log4net>

</configuration>
