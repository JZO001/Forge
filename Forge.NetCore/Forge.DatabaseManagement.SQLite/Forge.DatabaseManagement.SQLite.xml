<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Forge.DatabaseManagement.SQLite</name>
    </assembly>
    <members>
        <member name="T:Forge.DatabaseManagement.SQLite.SQLiteManager">
            <summary>
            Represents a database manager which ensure the underlying database integrity is valid.
            </summary>
        </member>
        <member name="F:Forge.DatabaseManagement.SQLite.SQLiteManager.DIALECT">
            <summary>
            Dialect key
            </summary>
        </member>
        <member name="F:Forge.DatabaseManagement.SQLite.SQLiteManager.DIALECT_EXPECTED_VALUE">
            <summary>
            Dialect value
            </summary>
        </member>
        <member name="F:Forge.DatabaseManagement.SQLite.SQLiteManager.CONNECTION_DRIVER">
            <summary>
            Driver class key
            </summary>
        </member>
        <member name="F:Forge.DatabaseManagement.SQLite.SQLiteManager.CONNECTION_DRIVER_EXPECTED_VALUE">
            <summary>
            Driver class value
            </summary>
        </member>
        <member name="F:Forge.DatabaseManagement.SQLite.SQLiteManager.CONNECTION_STRING">
            <summary>
            Connection string key
            </summary>
        </member>
        <member name="F:Forge.DatabaseManagement.SQLite.SQLiteManager.CONNECTION_STRING_NAME">
            <summary>
            Connection string name key
            </summary>
        </member>
        <member name="M:Forge.DatabaseManagement.SQLite.SQLiteManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.DatabaseManagement.SQLite.SQLiteManager"/> class.
            </summary>
        </member>
        <member name="M:Forge.DatabaseManagement.SQLite.SQLiteManager.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Forge.DatabaseManagement.SQLite.SQLiteManager"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Forge.DatabaseManagement.SQLite.SQLiteManager.IsInitialized">
            <summary>
            Gets a value indicating whether this instance is initialized.
            </summary>
            <value>
            	<c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.DatabaseManagement.SQLite.SQLiteManager.Initialize(Forge.Configuration.Shared.CategoryPropertyItem)">
            <summary>
            Initializes the specified config item.
            </summary>
            <param name="configItem">The config item.</param>
        </member>
        <member name="M:Forge.DatabaseManagement.SQLite.SQLiteManager.EnsureDatabaseIntegrity(System.Int64,System.Collections.Generic.Dictionary{System.String,System.String},Forge.DatabaseManagement.SchemaFactoryModeEnum)">
            <summary>
            Ensures the database integrity.
            </summary>
            <param name="systemId">The system id.</param>
            <param name="descriptor">The descriptor.</param>
            <param name="mode">The mode.</param>
            <exception cref="T:Forge.DatabaseManagement.UnexpectedNHibernateConfigurationException">Unexpected dialect.
            or
            Unexpected connection driver.</exception>
            <exception cref="T:Forge.Configuration.Shared.InvalidConfigurationException">
            Unable to connection information in NHibernate Descriptor settings.
            or
            Unable to find data source in connection string.
            </exception>
            <exception cref="T:Forge.Configuration.Shared.InvalidConfigurationException">Unable to connection information in NHibernate Descriptor settings.
            or
            Unable to find data source in connection string.</exception>
        </member>
        <member name="M:Forge.DatabaseManagement.SQLite.SQLiteManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Forge.DatabaseManagement.SQLite.SQLiteManager.GetDatabaseFile(System.String)">
            <summary>
            Gets the database file.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.DatabaseManagement.SQLite.SQLiteManager.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="dispose"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
    </members>
</doc>
