<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Forge.ORM.NHibernateExtension</name>
    </assembly>
    <members>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.AllCriteria">
             <summary>
             Default criteria for query initializations. These criteria means ALL.
             <example>
             <code>
                 Criteria criteria = AllCriteria.Instance;
                 IListSpecialized&lt;CustomEntities&gt; resultList = uow.Query&lt;CustomEntities&gt;(criteria);
            
                 foreach (CustomEntities e in resultList)
                 {
                     Assert.IsTrue(criteria.ResultForEntity(e));
                     Assert.AreEqual(resultList.Count, 2);
                 }
             </code>
             </example>
             </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.AllCriteria"/> class from being created.
            </summary>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.Negation">
            <summary>
            NOT USED
            Gets or sets a value indicating whether this <see cref="T:Forge.ORM.NHibernateExtension.Criterias.Criteria" /> is negation.
            </summary>
            <value>
              <c>true</c> if negation; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.Instance">
            <summary>
            Gets the instance of the AllCriteria.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.ResultForEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Examine criteria match on the provided entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.BuildCriteria(NHibernate.Criterion.DetachedCriteria,NHibernate.Criterion.Junction)">
            <summary>
            Builds the criteria.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="dependencyCriterion">The dependency criterion.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AllCriteria.BuildCriterion(System.String)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria">
             <summary>
             Arithmetic criteria for comparable types
             <example>
             <code>
             Criteria arithmeticCriteria = new ArithmeticCriteria("value", 3L, ArithmeticOperandEnum.Greater);
            
             IListSpecialized&lt;EnumeratorItem&gt; resultList = uow.Query&lt;EnumeratorItem&gt;(arithmeticCriteria);
             foreach (EnumeratorItem e in resultList)
             {
                 Assert.IsTrue(arithmeticCriteria.ResultForEntity(e));
                 Assert.AreEqual(resultList.Count, 1);
                 Assert.AreEqual(e.Value, 4L);
             }
             </code>
             </example>
             </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria"/> class from being created.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria.#ctor(System.String,System.IComparable)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria.#ctor(System.String,System.IComparable,Forge.ORM.NHibernateExtension.Criterias.ArithmeticOperandEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <param name="operand">The operand.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria.Operand">
            <summary>
            Gets or sets the operand.
            </summary>
            <value>
            The operand.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria.ResultForEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Examine criteria match on the provided entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.ArithmeticCriteria.BuildCriterion(System.String)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.ArithmeticOperandEnum">
            <summary>
            Operands for arithemtic criteria
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.ArithmeticOperandEnum.Equal">
            <summary>
            Equal
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.ArithmeticOperandEnum.NotEqual">
            <summary>
            NotEqual
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.ArithmeticOperandEnum.Greater">
            <summary>
            Greater
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.ArithmeticOperandEnum.Lower">
            <summary>
            Lower
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.ArithmeticOperandEnum.GreaterOrEqual">
            <summary>
            Greater or equal
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.ArithmeticOperandEnum.LowerOrEqual">
            <summary>
            Lower or equal
            </summary>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.AssociationEntry">
            <summary>
            Represents an association. This class used by the infrastructure.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.AssociationEntry.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.AssociationEntry" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="association">The association.</param>
            <param name="alias">The alias.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.AssociationEntry.Key">
            <summary>
            Gets the key. For example: enumeratorType.guest
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.AssociationEntry.Association">
            <summary>
            Gets the association. For example: t.guest
            </summary>
            <value>
            The association.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.AssociationEntry.Alias">
            <summary>
            Gets the alias. For example: g
            </summary>
            <value>
            The alias.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.AssociationEntry.Criteria">
            <summary>
            Gets or sets the criteria.
            </summary>
            <value>
            The criteria.
            </value>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria">
             <summary>
             Between criteria
             <example>
             <code>
             Criteria betweenCriteria = new BetweenCriteria("value", 1L, 3L);
            
             IListSpecialized&lt;EnumeratorItem&gt; resultList = uow.Query&lt;EnumeratorItem&gt;(betweenCriteria);
             foreach (EnumeratorItem e in resultList)
             {
                 Assert.IsTrue(betweenCriteria.ResultForEntity(e));
                 Assert.AreEqual(resultList.Count, 6);
             }
             </code>
             </example>
             </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria"/> class from being created.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria.#ctor(System.String,System.IComparable,System.IComparable)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="loValue">The lo value.</param>
            <param name="hiValue">The hi value.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria.#ctor(System.String,System.IComparable,System.IComparable,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="loValue">The lo value.</param>
            <param name="hiValue">The hi value.</param>
            <param name="disjunction">if set to <c>true</c> [disjunction].</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria.HiValue">
            <summary>
            Gets or sets the hi value.
            </summary>
            <value>
            The hi value.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria.LoValue">
            <summary>
            Gets or sets the lo value.
            </summary>
            <value>
            The lo value.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria.ResultForEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Examine criteria match on the provided entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.BetweenCriteria.BuildCriterion(System.String)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.Criteria">
            <summary>
            Criteria base class
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.Criteria.mCriterion">
            <summary>
            Cached criterion
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.Criteria"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.Criteria"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.Criteria" /> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="negation">if set to <c>true</c> [disjunction].</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.Criteria.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.Criteria.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>
            The name of the field.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.Criteria.Negation">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forge.ORM.NHibernateExtension.Criterias.Criteria" /> is negation.
            </summary>
            <value>
              <c>true</c> if negation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.ResultForEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Examine criteria match on the provided entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.BuildCriteria(NHibernate.Criterion.DetachedCriteria)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.BuildCriteria(NHibernate.Criterion.DetachedCriteria,NHibernate.Criterion.Junction)">
            <summary>
            Builds the criteria.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="dependencyCriterion">The dependency criterion.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.Equals(Forge.ORM.NHibernateExtension.Criterias.Criteria)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.GetAssociations">
            <summary>
            Gets the associations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.BuildCriterion(System.String)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.Criteria.CreateDetachedCriteria(NHibernate.Criterion.DetachedCriteria,System.String,NHibernate.Criterion.Junction)">
            <summary>
            Creates the detached criteria.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="property">The property.</param>
            <param name="dependencyCriterion">The dependency criterion.</param>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria">
             <summary>
             Group criterias into conjunctions or disjunctions (A and B and C..., A or B or C...)
             <example>
             <code>
             Criteria likeCriteria = new GroupCriteria(new LikeCriteria("name", "C", LikeMatchModeEnum.Anywhere),
                 new ArithmeticCriteria("enumeratorType.id.systemId", 1L),
                 new ArithmeticCriteria("enumeratorType.systemEnumeratorType", SystemEnumeratorTypeEnum.PaymentModes));
            
             IListSpecialized&lt;EnumeratorItem&gt; resultList = uow.Query&lt;EnumeratorItem&gt;(likeCriteria);
             foreach (EnumeratorItem e in resultList)
             {
                 Assert.IsTrue(likeCriteria.ResultForEntity(e));
             }
             </code>
             </example>
             </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria"/> class from being created.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.#ctor(Forge.ORM.NHibernateExtension.Criterias.Criteria[])">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria"/> class.
            </summary>
            <param name="criterias">The criterias.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.#ctor(Forge.ORM.NHibernateExtension.Criterias.GroupCriteriaLogicEnum,Forge.ORM.NHibernateExtension.Criterias.Criteria[])">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria"/> class.
            </summary>
            <param name="logic">The logic.</param>
            <param name="criterias">The criterias.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>
            The name of the field.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.Criterias">
            <summary>
            Gets or sets the criterias.
            </summary>
            <value>
            The criterias.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.Logic">
            <summary>
            Gets or sets the logic.
            </summary>
            <value>
            The logic.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.ResultForEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Examine criteria match on the provided entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.BuildCriteria(NHibernate.Criterion.DetachedCriteria,NHibernate.Criterion.Junction)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="dependencyCriterion">The dependency criterion.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.GroupCriteria.BuildCriterion(System.String)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.GroupCriteriaLogicEnum">
            <summary>
            Assign logic for group criteria
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.GroupCriteriaLogicEnum.And">
            <summary>
            And expression
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.GroupCriteriaLogicEnum.Or">
            <summary>
            Or expression
            </summary>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.InCriteria">
             <summary>
             In Criteria
             <example>
             <code>
             Criteria criteria = new InCriteria("name", "Cash", "CreditCard", "Transfer");
            
             IListSpecialized&lt;EnumeratorItem&gt; resultList = uow.Query&lt;EnumeratorItem&gt;(criteria);
             </code>
             </example>
             </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.InCriteria.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.InCriteria"/> class from being created.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.InCriteria.#ctor(System.String,System.IComparable[])">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.InCriteria"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.InCriteria.#ctor(System.String,System.Boolean,System.IComparable[])">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.InCriteria"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="disjunction">if set to <c>true</c> [all equals].</param>
            <param name="values">The values.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.InCriteria.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.InCriteria.ResultForEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Examine criteria match on the provided entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.InCriteria.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.InCriteria.BuildCriterion(System.String)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.IReflectionCriteria">
            <summary>
            Represents a criteria which used to examine an entity with reflection.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.IReflectionCriteria.ResultForEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Examine criteria match on the provided entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria">
            <summary>
            Like criteria. This expression is not case sensite.
            <example>
            <code>
            Criteria LikeAnyWhereCriteria = new LikeCriteria("name", "Cash2", LikeMatchModeEnum.Anywhere);
            IListSpecialized&lt;EnumeratorItem&gt; resultList = uow.Query&lt;EnumeratorItem&gt;(LikeAnyWhereCriteria);
            foreach (EnumeratorItem e in resultList)
            {
                Assert.IsTrue(LikeAnyWhereCriteria.ResultForEntity(e));
                Assert.AreEqual(resultList.Count, 0);
                Assert.AreNotEqual(e.Name, "Cash2");
            }
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria"/> class from being created.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria.#ctor(System.String,System.String,Forge.ORM.NHibernateExtension.Criterias.LikeMatchModeEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <param name="matchMode">The match mode.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria.MatchMode">
            <summary>
            Gets or sets the match mode.
            </summary>
            <value>
            The match mode.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria.ResultForEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Examine criteria match on the provided entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.LikeCriteria.BuildCriterion(System.String)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.LikeMatchModeEnum">
            <summary>
            Matching mode for like criteria
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.LikeMatchModeEnum.Exact">
            <summary>
            The provided string is exactly match with cell value
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.LikeMatchModeEnum.Start">
            <summary>
            The cell value starts with the provided string
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.LikeMatchModeEnum.End">
            <summary>
            The cell value ends with the provided string
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.LikeMatchModeEnum.Anywhere">
            <summary>
            The cell value contains the provided string
            </summary>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.NullCriteria">
             <summary>
             Null criteria
             <example>
             <code>
             Criteria criteria = new NullCriteria("name");
             IListSpecialized&lt;CustomEntities&gt; resultList = uow.Query&lt;CustomEntities&gt;(criteria);
            
             foreach (CustomEntities e in resultList)
             {
                 Assert.IsTrue(criteria.ResultForEntity(e));
                 Assert.AreEqual(resultList.Count, 1);
                 Assert.IsNull(e.Name);
             }
             </code>
             </example>
             </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.NullCriteria.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.NullCriteria"/> class from being created.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.NullCriteria.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.NullCriteria"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.NullCriteria.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.NullCriteria"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="negation">if set to <c>true</c> [negation].</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.NullCriteria.ResultForEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Examine criteria match on the provided entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.NullCriteria.BuildCriterion(System.String)">
            <summary>
            Builds the criterion.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.OrderBy">
             <summary>
             OrderBy for ordering entities
             <example>
             <code>
             QueryParams&lt;Driver&gt; qp = new QueryParams&lt;Driver&gt;(
                 new GroupCriteria(
                     new ArithmeticCriteria("name", "B", ArithmeticOperandEnum.NotEqual),
                     new ArithmeticCriteria("orderMode", OrderModeEnum.Asc)
                 )
             );
             qp.MaxResults = 2;
             qp.MaxFetchDeepth = 3;
             qp.OrderBys.Add(new OrderBy("id.id", OrderModeEnum.Desc));
             IList&lt;Driver&gt; resultList = QueryHelper.Query&lt;Driver&gt;(session, qp);
            
             Assert.IsTrue(qp.Criteria.ResultForEntity(resultList[0]));
             </code>
             </example>
             </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.OrderBy.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.OrderBy"/> class from being created.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.OrderBy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.OrderBy"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.OrderBy.#ctor(System.String,Forge.ORM.NHibernateExtension.Criterias.OrderModeEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Criterias.OrderBy"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="orderMode">The order mode.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.OrderBy.FieldName">
            <summary>
            Gets the name of the field.
            </summary>
            <value>
            The name of the field.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Criterias.OrderBy.OrderMode">
            <summary>
            Gets the order mode.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.OrderBy.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.OrderBy.Compare(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId,Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Compares the specified left entity.
            </summary>
            <param name="leftEntity">The left entity.</param>
            <param name="rightEntity">The right entity.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.OrderBy.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.OrderBy.Equals(Forge.ORM.NHibernateExtension.Criterias.OrderBy)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.OrderBy.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Criterias.OrderBy.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Criterias.OrderModeEnum">
            <summary>
            Sort mode for OrderBy
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.OrderModeEnum.Asc">
            <summary>
            Sort by ascending
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Criterias.OrderModeEnum.Desc">
            <summary>
            Sort by descending
            </summary>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.EntityCloneException">
            <summary>
            Exception for entity clone fail scenario
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityCloneException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityCloneException"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityCloneException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityCloneException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityCloneException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityCloneException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityCloneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityCloneException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.EntityDeleteException">
            <summary>
            Exception for entity deletion fail scenarios
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityDeleteException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityDeleteException"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityDeleteException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityDeleteException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityDeleteException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityDeleteException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityDeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityDeleteException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.EntityRefreshException">
            <summary>
            Exception for entity refresh fail scenario
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityRefreshException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityRefreshException"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityRefreshException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityRefreshException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityRefreshException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityRefreshException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityRefreshException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityRefreshException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.EntityRestoreException">
            <summary>
            Exception for entity restore scenario
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityRestoreException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityRestoreException"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityRestoreException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityRestoreException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityRestoreException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityRestoreException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntityRestoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntityRestoreException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.EntitySaveException">
            <summary>
            Exception for entity save fail scenario
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntitySaveException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntitySaveException"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntitySaveException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntitySaveException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntitySaveException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntitySaveException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.EntitySaveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.EntitySaveException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase">
            <summary>
            Base entity for inherited entity types
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase"/> class.
            </summary>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.CreateEntityClone(Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase,NHibernate.Engine.IPersistenceContext)">
            <summary>
            Creates the entity clone.
            </summary>
            <param name="entity">The entity.</param>
            <param name="context">The context.</param>
            <returns></returns>
            <exception cref="T:Forge.ORM.NHibernateExtension.EntityCloneException"></exception>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.RestoreFromEntityClone(Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase,Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone,NHibernate.ISession)">
            <summary>
            Restores from entity clone.
            </summary>
            <param name="entity">The entity.</param>
            <param name="clone">The clone.</param>
            <param name="session">The session.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.RestoreFromEntityClone(Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase,Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone,System.Boolean,System.Text.StringBuilder,NHibernate.ISession)">
            <summary>
            Restores from entity clone.
            </summary>
            <param name="entity">The entity.</param>
            <param name="clone">The clone.</param>
            <param name="throwsExceptionOnAnyFailure">if set to <c>true</c> [throws exception on any failure].</param>
            <param name="messageLog">The message log.</param>
            <param name="session">The session.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.CompareTo(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Compares to.
            </summary>
            <param name="o">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase.InternalClone(System.Type,Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase)">
            <summary>
            Clone the entire entity automatically
            </summary>
            <param name="type">The type.</param>
            <param name="newEntity">The new entity.</param>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId">
            <summary>
            Composite identifier for entities
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.ID_SEPARATOR">
            <summary>
            Separator for ToString() method
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId"/> class.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.#ctor(Forge.ORM.NHibernateExtension.Model.Distributed.EntityId)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId"/> class.
            </summary>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.#ctor(System.Int64,System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId"/> class.
            </summary>
            <param name="systemId">The system id.</param>
            <param name="deviceId">The device id.</param>
            <param name="id">The id.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId"/> class.
            </summary>
            <param name="systemId">The system id.</param>
            <param name="deviceId">The device id.</param>
            <param name="id">The id.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.SystemId">
            <summary>
            Gets the system id.
            </summary>
            <value>
            The system id.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.DeviceId">
            <summary>
            Gets the device id.
            </summary>
            <value>
            The device id.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.Parse(System.String)">
            <summary>
            Parses the specified entity id.
            </summary>
            <param name="entityId">The entity id.</param>
            <returns>The parsed EntityId instance.</returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.TryParse(System.String,Forge.ORM.NHibernateExtension.Model.Distributed.EntityId@)">
            <summary>
            Try to parse the provided value.
            </summary>
            <param name="entityId">The entity id.</param>
            <param name="id">The id.</param>
            <returns>True, if the parse was successful, otherwise False.</returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.CompareTo(Forge.ORM.NHibernateExtension.Model.Distributed.EntityId)">
            <summary>
            Compares to.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.Equals(Forge.ORM.NHibernateExtension.Model.Distributed.EntityId)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityId.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion">
            <summary>
            Version tracker for entities
            </summary>
        </member>
        <member name="E:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.PropertyChanging">
            <summary>
            Occurs when a property value is changing.
            </summary>
        </member>
        <member name="E:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion"/> class.
            </summary>
            <param name="deviceId">The device id.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion"/> class.
            </summary>
            <param name="deviceId">The device id.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.DeviceId">
            <summary>
            Gets or sets the device id.
            </summary>
            <value>
            The device id.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.SeqNumber">
            <summary>
            Gets or sets the seq number.
            </summary>
            <value>
            The seq number.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.IncSeqNumber">
            <summary>
            Increase the seq number.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.DecSeqNumber">
            <summary>
            Decs the seq number.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.CompareTo(Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion)">
            <summary>
            Compares to.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.Equals(Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.OnPropertyChanging(System.String)">
            <summary>
            Called when [property changing].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.EntityVersion.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone">
            <summary>
            Represent a remote entity with type, id and field values. This class used by the infrastructure.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone.#ctor(System.Type,Forge.ORM.NHibernateExtension.Model.Distributed.EntityId,System.Collections.Generic.Dictionary{System.String,System.Object},System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone" /> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity id.</param>
            <param name="fields">The fields.</param>
            <param name="entityTypeVersion">The entity type version.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone.Fields">
            <summary>
            Gets the fields.
            </summary>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone.EntityTypeVersion">
            <summary>
            Gets the entity type version.
            </summary>
            <value>
            The entity type version.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityClone.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy">
            <summary>
            Represent a remote entity reference with type and id. This class used by the infrastructure.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.#ctor(System.Type,Forge.ORM.NHibernateExtension.Model.Distributed.EntityId)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity id.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.#ctor(Forge.ORM.NHibernateExtension.Model.Distributed.EntityBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy"/> class.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.EntityId">
            <summary>
            Gets the entity id.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.CompareTo(Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy)">
            <summary>
            Compares to.
            </summary>
            <param name="o">The o.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.Equals(Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy)">
            <summary>
            Equalses the specified o.
            </summary>
            <param name="o">The o.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.Distributed.Serialization.EntityProxy.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.EntityBaseGenericId`1">
            <summary>
            Base entity for inherited entity types with identifier
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseGenericId`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.EntityBaseGenericId`1"/> class.
            </summary>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseGenericId`1.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseGenericId`1.IsSaved">
            <summary>
            Gets or sets a value indicating whether this instance is saved.
            </summary>
            <value>
              <c>true</c> if this instance is saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseGenericId`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseGenericId`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseGenericId`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseGenericId`1.CompareTo(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Compares to.
            </summary>
            <param name="o">The other.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.EntityBaseInt32NativeId">
            <summary>
            Represents an entity base with Int32 type identifier and native id generator
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Model.EntityBaseInt32NativeId.id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseInt32NativeId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.EntityBaseInt32NativeId"/> class.
            </summary>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseInt32NativeId.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseInt32NativeId.IsSaved">
            <summary>
            Gets or sets a value indicating whether this instance is saved.
            </summary>
            <value>
              <c>true</c> if this instance is saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.EntityBaseInt64NativeId">
            <summary>
            Represents an entity base with Int32 type identifier and native id generator
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.Model.EntityBaseInt64NativeId.id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseInt64NativeId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.EntityBaseInt64NativeId"/> class.
            </summary>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseInt64NativeId.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseInt64NativeId.IsSaved">
            <summary>
            Gets or sets a value indicating whether this instance is saved.
            </summary>
            <value>
              <c>true</c> if this instance is saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId">
            <summary>
            Base entity for inherited entity types
            </summary>
        </member>
        <member name="E:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.PropertyChanging">
            <summary>
            Occurs when a property value is changing.
            </summary>
        </member>
        <member name="E:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId"/> class.
            </summary>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.Deleted">
            <summary>
            Gets or sets a value indicating whether [deleted].
            </summary>
            <value>
              <c>true</c> if [deleted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.EntityCreationTime">
            <summary>
            Gets the entity creation time.
            </summary>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.EntityModificationTime">
            <summary>
            Gets or sets the entity modification time.
            </summary>
            <value>
            The entity modification time.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.IsSaved">
            <summary>
            Gets or sets a value indicating whether this instance is saved.
            </summary>
            <value>
              <c>true</c> if this instance is saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.IsChanged">
            <summary>
            Gets a value indicating whether the content of this instance is changed.
            </summary>
            <value>
            <c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.Equals(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.CompareTo(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Compares to.
            </summary>
            <param name="o">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.OnPropertyChanging(System.String)">
            <summary>
            Called when [property changing].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId.InternalClone(System.Type,Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId)">
            <summary>
            Clone the entire entity automatically
            </summary>
            <param name="type">The type.</param>
            <param name="newEntity">The new entity.</param>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.Model.EntityFieldDescriptionAttribute">
            <summary>
            Represents the description of an entity field. For example an UI editor use this information to display user-friendly information.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityFieldDescriptionAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.EntityFieldDescriptionAttribute"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.Model.EntityFieldDescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.Model.EntityFieldDescriptionAttribute"/> class.
            </summary>
            <param name="description">The description.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.Model.EntityFieldDescriptionAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.ORMException">
            <summary>
            Base exception type
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.ORMException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.ORMException"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.ORMException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.ORMException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.ORMException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.ORMException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.ORMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.ORMException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.ORMUtils">
            <summary>
            Util methods for ORM
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.ORMUtils.SaveEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId,NHibernate.ISession)">
            <summary>
            Saves the entity into the provided session.
            </summary>
            <param name="entity">The entity.</param>
            <param name="session">The session.</param>
            <example>
              <code>
            Product p = new Product();
            p.Id = new EntityId(1, 1, DateTime.Now.Ticks);
            p.Version = new EntityVersion(1);
            p.Category = "category_" + Guid.NewGuid().ToString();
            p.Name = "name_" + Guid.NewGuid().ToString();
            p.Price = new decimal(102.23);
            p.Deleted = true;
            EFUtils.SaveEntity(p, session);
              </code>
              </example>
            <exception cref="T:Forge.ORM.NHibernateExtension.EntitySaveException">Occurs on any fail while the entity saving</exception>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.ORMUtils.RefreshEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId,NHibernate.ISession)">
            <summary>
            Refreshes the entity content from the provided session.
            </summary>
            <param name="entity">The entity.</param>
            <param name="session">The session.</param>
            <exception cref="T:Forge.ORM.NHibernateExtension.EntityRefreshException">Occurs on any fail while the entity content refreshing</exception>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.ORMUtils.DeleteEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId,NHibernate.ISession)">
            <summary>
            Deletes the entity in the provided session.
            </summary>
            <param name="entity">The entity.</param>
            <param name="session">The session.</param>
            <example>
            <code>
            QueryParams&lt;PersistentStorageItem&gt; query = new QueryParams&lt;PersistentStorageItem&gt;(
                    new GroupCriteria(
                    new ArithmeticCriteria("id.systemId", entityId.SystemId),
                    new ArithmeticCriteria("id.deviceId", entityId.DeviceId),
                    new ArithmeticCriteria("id.id", entityId.Id)), 1);
            IList&lt;PersistentStorageItem&gt; resultList = QueryHelper.Query&lt;PersistentStorageItem&gt;(session, query, LOG_QUERY);
            PersistentStorageItem item = null;
            if (resultList.Count == 0)
            {
                throw new Exception(String.Format("Unable to remove object. Id: {0}", entityId));
            }
            else
            {
                item = resultList[0];
                EFUtils.DeleteEntity(item, session);
            }
            </code>
            </example>
            <exception cref="T:Forge.ORM.NHibernateExtension.EntityDeleteException">Occurs on any fail while the entity deleting</exception>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.ORMUtils.UnproxyEntity``1(``0,NHibernate.ISession)">
            <summary>
            Unproxies the entity.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
            <param name="session">The session.</param>
            <returns>TEntity</returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.ORMUtils.UnproxyEntity(Forge.ORM.NHibernateExtension.Model.EntityBaseWithoutId,NHibernate.ISession)">
            <summary>
            Unproxies the entity.
            </summary>
            <param name="entity">The entity.</param>
            <param name="session">The session.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.QueryDetachedParams">
            <summary>
            Parameters for query which uses NHibernate DetachedCriteria
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryDetachedParams"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams.#ctor(System.Type,NHibernate.Criterion.DetachedCriteria)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryDetachedParams"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams.#ctor(System.Type,NHibernate.Criterion.DetachedCriteria,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryDetachedParams" /> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="criteria">The criteria.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.QueryDetachedParams.Criteria">
            <summary>
            Gets or sets the criteria.
            </summary>
            <value>
            The criteria.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams.GetDetachedCriteria">
            <summary>
            Gets the detached criteria.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams.Equals(Forge.ORM.NHibernateExtension.QueryDetachedParams)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.QueryDetachedParams`1">
            <summary>
            Parameters for query which uses NHibernate DetachedCriteria (generic)
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryDetachedParams`1"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryDetachedParams`1"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams`1.#ctor(NHibernate.Criterion.DetachedCriteria)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryDetachedParams`1"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams`1.#ctor(NHibernate.Criterion.DetachedCriteria,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryDetachedParams`1"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryDetachedParams`1.Equals(Forge.ORM.NHibernateExtension.QueryDetachedParams{`0})">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.QueryException">
            <summary>
            Exception for query fail scenario
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryException"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.QueryHelper">
            <summary>
            Helper methods for query entities.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryHelper.#cctor">
            <summary>
            Initializes the <see cref="T:Forge.ORM.NHibernateExtension.QueryHelper" /> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryHelper.Query``1(NHibernate.ISession,Forge.ORM.NHibernateExtension.QueryParamsBase)">
            <summary>
            Queries the specified session.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="session">The session.</param>
            <param name="queryData">The query data.</param>
            <returns>The result list</returns>
            <example>
            <code>
            QueryParams&lt;People&gt; qpPeople = new QueryParams&lt;People&gt;(
                new ArithmeticCriteria("id", new EntityId(1, 1, 2)));
            IList&lt;People&gt; resultListPeople = QueryHelper.Query&lt;People&gt;(session, qpPeople);
            </code>
            </example>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryHelper.Query(NHibernate.ISession,Forge.ORM.NHibernateExtension.QueryParamsBase)">
            <summary>
            Queries the specified session.
            </summary>
            <param name="session">The session.</param>
            <param name="queryData">The query data.</param>
            <returns>The result list</returns>
            <example>
            <code>
            IList&lt;EntityBase&gt; queryResult = QueryHelper.Query(session, new QueryParams(entityRule.EntityType));
            </code>
            </example>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryHelper.Query``1(NHibernate.ISession,Forge.ORM.NHibernateExtension.QueryParamsBase,System.Boolean)">
            <summary>
            Queries the specified session.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="session">The session.</param>
            <param name="queryData">The query data.</param>
            <param name="logQuery">if set to <c>true</c> [log query].</param>
            <returns>The result list</returns>
            <example>
            <code>
            QueryParams&lt;PersistentStorageAllocationTable&gt; query = new QueryParams&lt;PersistentStorageAllocationTable&gt;(
                    GetAllocationTableCriteria(), 1);
            IList&lt;PersistentStorageAllocationTable> resultList = QueryHelper.Query&lt;PersistentStorageAllocationTable&gt;(session, query, LOG_QUERY);
            if (resultList.Count == 0)
            {
                this.mAllocationTable = new ItemTable();
            }
            </code>
            </example>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryHelper.Query(NHibernate.ISession,Forge.ORM.NHibernateExtension.QueryParamsBase,System.Boolean)">
            <summary>
            Queries the specified session.
            </summary>
            <param name="session">The session.</param>
            <param name="queryData">The query data.</param>
            <param name="logQuery">if set to <c>true</c> [log query].</param>
            <returns>The result list</returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.QueryParamsBase">
            <summary>
            Represents the base class for query parameters
            </summary>
        </member>
        <member name="F:Forge.ORM.NHibernateExtension.QueryParamsBase.DEFAULT_MAX_RESULTS">
            <summary>
            The default value of max results
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParamsBase.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams" /> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParamsBase.#ctor(System.Type,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams" /> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.QueryParamsBase.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.QueryParamsBase.MaxResults">
            <summary>
            Gets or sets the max results.
            </summary>
            <value>
            The max results.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.QueryParamsBase.EntityType">
            <summary>
            Gets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.QueryParamsBase.Timeout">
            <summary>
            Gets or sets the timeout of the underlying ADO.NET query.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParamsBase.GetDetachedCriteria">
            <summary>
            Gets the detached criteria.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParamsBase.PrepareCriteria(NHibernate.ICriteria)">
            <summary>
            Prepares the criteria.
            </summary>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParamsBase.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParamsBase.Equals(Forge.ORM.NHibernateExtension.QueryParamsBase)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParamsBase.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParamsBase.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.QueryParams">
             <summary>
             Parameters for queries
             <example>
             <code>
             QueryParams&lt;EnumeratorItem&gt; qp = null;
             Criteria c = null;
             IList&lt;EnumeratorItem&gt; resultItem1 = null;
            
             c = new GroupCriteria(
                     new ArithmeticCriteria("value", 0L),
                     new ArithmeticCriteria("id.systemId", 1L),
                     new ArithmeticCriteria("enumeratorType.guest.id.systemId", 1L),
                     new ArithmeticCriteria("enumeratorType.guest.name", "G1"),
                     new ArithmeticCriteria("enumeratorType.guest.name", "G1"),
                     new ArithmeticCriteria("enumeratorType.systemEnumeratorType", SystemEnumeratorTypeEnum.PaymentModes));
            
             qp = new QueryParams&lt;EnumeratorItem&gt;(c);
             resultItem1 = uow.Query&lt;EnumeratorItem&gt;(qp);
             </code>
             </example>
             </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.#ctor(System.Type,Forge.ORM.NHibernateExtension.Criterias.Criteria)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.#ctor(System.Type,Forge.ORM.NHibernateExtension.Criterias.Criteria,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="criteria">The criteria.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.#ctor(System.Type,Forge.ORM.NHibernateExtension.Criterias.Criteria,Forge.ORM.NHibernateExtension.Criterias.OrderBy)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="criteria">The criteria.</param>
            <param name="orderBy">The order by.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.#ctor(System.Type,Forge.ORM.NHibernateExtension.Criterias.Criteria,Forge.ORM.NHibernateExtension.Criterias.OrderBy,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="criteria">The criteria.</param>
            <param name="orderBy">The order by.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.#ctor(System.Type,Forge.ORM.NHibernateExtension.Criterias.Criteria,System.Collections.Generic.ICollection{Forge.ORM.NHibernateExtension.Criterias.OrderBy})">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="criteria">The criteria.</param>
            <param name="orderBys">The order bys.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.#ctor(System.Type,Forge.ORM.NHibernateExtension.Criterias.Criteria,System.Collections.Generic.ICollection{Forge.ORM.NHibernateExtension.Criterias.OrderBy},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="criteria">The criteria.</param>
            <param name="orderBys">The order bys.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.QueryParams.Criteria">
            <summary>
            Gets or sets the criteria.
            </summary>
            <value>
            The criteria.
            </value>
        </member>
        <member name="P:Forge.ORM.NHibernateExtension.QueryParams.OrderBys">
            <summary>
            Gets the order bys.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.GetDetachedCriteria">
            <summary>
            Gets the detached criteria.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.PrepareCriteria(NHibernate.ICriteria)">
            <summary>
            Prepares the criteria.
            </summary>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.Equals(Forge.ORM.NHibernateExtension.QueryParams)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Forge.ORM.NHibernateExtension.QueryParams`1">
            <summary>
            Parameters for queries (generic)
            <example>
            <code>
            QueryParams&lt;EnumeratorItem&gt; qp = null;
            Criteria c = null;
            c = new GroupCriteria(GroupCriteriaLogicEnum.Or,
            new GroupCriteria(
                new ArithmeticCriteria("value", 0L),
                new ArithmeticCriteria("id.systemId", 1L),
                new ArithmeticCriteria("enumeratorType.guest.id.systemId", 1L),
                new ArithmeticCriteria("enumeratorType.guest.name", "G1"),
                new ArithmeticCriteria("enumeratorType.guest.name", "G1"),
                new ArithmeticCriteria("enumeratorType.systemEnumeratorType", SystemEnumeratorTypeEnum.PaymentModes)),
            new GroupCriteria(
                new ArithmeticCriteria("value", 0L),
                new ArithmeticCriteria("id.systemId", 1L),
                new ArithmeticCriteria("enumeratorType.guest.id.systemId", 1L),
                new ArithmeticCriteria("enumeratorType.guest.name", "G1"),
                new ArithmeticCriteria("enumeratorType.guest.name", "G1"),
                new ArithmeticCriteria("enumeratorType.systemEnumeratorType", SystemEnumeratorTypeEnum.PaymentModes))
            );
            qp = new QueryParams&lt;EnumeratorItem&gt;(c);
            IList&lt;EnumeratorItem&gt; resultItem2 = uow.Query&lt;EnumeratorItem&gt;(qp);
            </code>
            </example>
            </summary>
            <typeparam name="TEntity">The type of the class.</typeparam>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams`1"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams`1"/> class.
            </summary>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams`1.#ctor(Forge.ORM.NHibernateExtension.Criterias.Criteria)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams`1"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams`1.#ctor(Forge.ORM.NHibernateExtension.Criterias.Criteria,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams`1"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams`1.#ctor(Forge.ORM.NHibernateExtension.Criterias.Criteria,Forge.ORM.NHibernateExtension.Criterias.OrderBy)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams`1"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="orderBy">The order by.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams`1.#ctor(Forge.ORM.NHibernateExtension.Criterias.Criteria,Forge.ORM.NHibernateExtension.Criterias.OrderBy,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams`1"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="orderBy">The order by.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams`1.#ctor(Forge.ORM.NHibernateExtension.Criterias.Criteria,System.Collections.Generic.ICollection{Forge.ORM.NHibernateExtension.Criterias.OrderBy})">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams`1"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="orderBys">The order bys.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams`1.#ctor(Forge.ORM.NHibernateExtension.Criterias.Criteria,System.Collections.Generic.ICollection{Forge.ORM.NHibernateExtension.Criterias.OrderBy},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.ORM.NHibernateExtension.QueryParams`1"/> class.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="orderBys">The order bys.</param>
            <param name="maxResults">The max results.</param>
        </member>
        <member name="M:Forge.ORM.NHibernateExtension.QueryParams`1.Equals(Forge.ORM.NHibernateExtension.QueryParams{`0})">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
    </members>
</doc>
