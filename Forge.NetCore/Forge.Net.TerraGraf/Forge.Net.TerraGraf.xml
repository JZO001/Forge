<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Forge.Net.TerraGraf</name>
    </assembly>
    <members>
        <member name="T:Forge.Net.TerraGraf.ConfigSection.TerraGrafConfiguration">
            <summary>
            Configuration access helper class for TerraGraf
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.ConfigSection.TerraGrafConfiguration.#cctor">
            <summary>
            Initializes the <see cref="T:Forge.Net.TerraGraf.ConfigSection.TerraGrafConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.ConfigSection.TerraGrafConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.ConfigSection.TerraGrafConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.ConfigSection.TerraGrafSection">
            <summary>
            Configuration Section for TerraGraf
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.ConfigSection.TerraGrafSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.ConfigSection.TerraGrafSection"/> class.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.ConfigContainer">
            <summary>
            Configuration root
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ConfigContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.ConfigContainer"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.ConfigContainer.Settings">
            <summary>
            Gets the settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.ConfigContainer.NetworkPeering">
            <summary>
            Gets the network peering.
            </summary>
            <value>
            The network peering.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.ConfigContainer.NetworkContext">
            <summary>
            Gets the network context.
            </summary>
            <value>
            The network context.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ConfigContainer.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.ConnectionEntry">
            <summary>
            Represents a connection target entry
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ConnectionEntry.#ctor(Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.ConnectionEntry"/> class.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ConnectionEntry.#ctor(Forge.Net.Synapse.AddressEndPoint,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.ConnectionEntry"/> class.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="reconnectOnFailure">if set to <c>true</c> [reconnect on failure].</param>
            <param name="delayBetweenAttemptsInMS">The delay between attempts in MS.</param>
            <param name="connectionTimeout">The connection timeout.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.ConnectionEntry.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.ConnectionEntry.ReconnectOnFailure">
            <summary>
            Gets or sets a value indicating whether [reconnect on failure].
            </summary>
            <value>
              <c>true</c> if [reconnect on failure]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.ConnectionEntry.DelayBetweenAttempsInMS">
            <summary>
            Gets or sets the delay between attemps in MS.
            </summary>
            <value>
            The delay between attemps in MS.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.ConnectionEntry.ConnectionTimeout">
            <summary>
            Gets or sets the connection timeout.
            </summary>
            <value>
            The connection timeout.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ConnectionEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ConnectionEntry.Equals(Forge.Net.TerraGraf.Configuration.ConnectionEntry)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns>True, if the other class is equals with this.</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ConnectionEntry.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ConnectionEntry.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.ContextRule">
            <summary>
            Rules of the context. Describes how the context communicate with each other
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ContextRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.ContextRule"/> class.
            </summary>
            <param name="networkContextName">Name of the network context.</param>
            <param name="rule">The rule.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.ContextRule.NetworkContextName">
            <summary>
            Gets the name of the network context.
            </summary>
            <value>
            The name of the network context.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.ContextRule.Rule">
            <summary>
            Gets the rule.
            </summary>
            <value>
            The rule.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ContextRule.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ContextRule.Equals(Forge.Net.TerraGraf.Configuration.ContextRule)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns>True, if the other class is equals with this.</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ContextRule.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.ContextRule.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.NATGatewaySettings">
            <summary>
            Describe NAT gateways
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NATGatewaySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.NATGatewaySettings"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NATGatewaySettings.EndPoints">
            <summary>
            Gets or sets the end points.
            </summary>
            <value>
            The end points.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NATGatewaySettings.LogConfiguration">
            <summary>
            Logs the configuration.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NATGatewaySettings.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.NATUPnPSettings">
            <summary>
            Represents the Windows NAT UPnP services settings
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NATUPnPSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.NATUPnPSettings"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NATUPnPSettings.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NATUPnPSettings.ProbeAddress">
            <summary>
            Gets or sets the probe address.
            </summary>
            <value>
            The probe address.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NATUPnPSettings.LogConfiguration">
            <summary>
            Logs the configuration.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NATUPnPSettings.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.NetworkContextSettings">
            <summary>
            Represent the settings of the network contexts
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NetworkContextSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.NetworkContextSettings"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NetworkContextSettings.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NetworkContextSettings.Separation">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.Configuration.NetworkContextSettings"/> is separation.
            </summary>
            <value>
              <c>true</c> if separation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NetworkContextSettings.WhiteList">
            <summary>
            Gets or sets the white list.
            </summary>
            <value>
            The white list.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NetworkContextSettings.BlackList">
            <summary>
            Gets or sets the black list.
            </summary>
            <value>
            The black list.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NetworkContextSettings.LogConfiguration">
            <summary>
            Logs the configuration.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NetworkContextSettings.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings">
            <summary>
            Represents the settings of the network peers
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings.NATGateways">
            <summary>
            Gets the NAT gateways.
            </summary>
            <value>
            The NAT gateways.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings.TCPServers">
            <summary>
            Gets the TCP servers.
            </summary>
            <value>
            The TCP servers.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings.TCPConnections">
            <summary>
            Gets the TCP connections.
            </summary>
            <value>
            The TCP connections.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings.UDPDetection">
            <summary>
            Gets the UDP detection.
            </summary>
            <value>
            The UDP detection.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings.NATUPnPSettings">
            <summary>
            Gets the NATU pn P settings.
            </summary>
            <value>
            The NATU pn P settings.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings.LogConfiguration">
            <summary>
            Logs the configuration.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.NetworkPeerSettings.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.Settings">
            <summary>
            General settings
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.Settings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.Settings"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.BlackHole">
            <summary>
            Gets or sets a value indicating whether [black hole].
            </summary>
            <value>
              <c>true</c> if [black hole]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultConnectionTimeoutInMS">
            <summary>
            Gets or sets the default connection timeout in MS.
            </summary>
            <value>
            The default connection timeout in MS.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.EnableMultipleConnectionWithNetworkPeers">
            <summary>
            Gets or sets a value indicating whether [enable multiple connection with network peers].
            </summary>
            <value>
            	<c>true</c> if [enable multiple connection with network peers]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.EnableAgressiveConnectionEstablishment">
            <summary>
            Gets or sets a value indicating whether [enable agressive connection establishment].
            </summary>
            <value>
            	<c>true</c> if [enable agressive connection establishment]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.MaxConnectionsWithNetworkPeers">
            <summary>
            Gets or sets the max connections with network peers.
            </summary>
            <value>
            The max connections with network peers.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultSocketAcceptTimeWaitInMS">
            <summary>
            Gets or sets the default socket accept time wait in MS.
            </summary>
            <value>
            The default socket accept time wait in MS.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultSocketBacklogSize">
            <summary>
            Gets or sets the default size of the socket backlog.
            </summary>
            <value>
            The default size of the socket backlog.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultLowLevelSocketReceiveBufferSize">
            <summary>
            Gets or sets the default size of the low level socket receive buffer.
            </summary>
            <value>
            The default size of the low level socket receive buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultLowLevelSocketSendBufferSize">
            <summary>
            Gets or sets the default size of the low level socket send buffer.
            </summary>
            <value>
            The default size of the low level socket send buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultLowLevelNoDelay">
            <summary>
            Gets or sets a value indicating whether [default low level no delay].
            </summary>
            <value>
            <c>true</c> if [default low level no delay]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultReceiveBufferSize">
            <summary>
            Gets or sets the default size of the receive buffer.
            </summary>
            <value>
            The default size of the receive buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultSendBufferSize">
            <summary>
            Gets or sets the default size of the send buffer.
            </summary>
            <value>
            The default size of the send buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultReceiveTimeoutInMS">
            <summary>
            Gets or sets the default receive timeout in MS.
            </summary>
            <value>
            The default receive timeout in MS.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultSendTimeoutInMS">
            <summary>
            Gets or sets the default send timeout in MS.
            </summary>
            <value>
            The default send timeout in MS.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultLowLevelSocketKeepAliveTime">
            <summary>
            Gets or sets the default keep alive time.
            </summary>
            <value>
            The default keep alive time.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultLowLevelSocketKeepAliveTimeInterval">
            <summary>
            Gets or sets the default keep alive time interval.
            </summary>
            <value>
            The default keep alive time interval.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.DefaultConcurrentSocketConnectionAttempts">
            <summary>
            Gets or sets the default concurrent socket connection attempts.
            </summary>
            <value>
            The default concurrent socket connection attempts.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.MaxMessagePassageNumber">
            <summary>
            Gets or sets the max message passage number.
            </summary>
            <value>
            The max message passage number.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.EnableIPV6">
            <summary>
            Gets or sets a value indicating whether [enable IP v6].
            </summary>
            <value>
              <c>true</c> if [enable IP v6]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.Settings.AddWindowsFirewallException">
            <summary>
            Gets or sets a value indicating whether [add windows firewall exception].
            </summary>
            <value>
            	<c>true</c> if [add windows firewall exception]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.Settings.LogConfiguration">
            <summary>
            Logs the configuration.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.Settings.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.TCPConnectionSettings">
            <summary>
            Represents the settings of the remote targets
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.TCPConnectionSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.TCPConnectionSettings"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.TCPConnectionSettings.EndPoints">
            <summary>
            Gets or sets the end points.
            </summary>
            <value>
            The end points.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.TCPConnectionSettings.LogConfiguration">
            <summary>
            Logs the configuration.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.TCPConnectionSettings.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.TCPServerSettings">
            <summary>
            Represents the settings of the TCP servers
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.TCPServerSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.TCPServerSettings"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.TCPServerSettings.Auto">
            <summary>
            Gets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.Configuration.TCPServerSettings"/> is auto.
            </summary>
            <value>
              <c>true</c> if auto; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.TCPServerSettings.EndPoints">
            <summary>
            Gets or sets the end points.
            </summary>
            <value>
            The end points.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.TCPServerSettings.LogConfiguration">
            <summary>
            Logs the configuration.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.TCPServerSettings.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.UDPDetectionModeEnum">
            <summary>
            UDP Detection mode
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Configuration.UDPDetectionModeEnum.Broadcast">
            <summary>
            IPv4 broadcast
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Configuration.UDPDetectionModeEnum.Multicast">
            <summary>
            IPv4/IPv6 multicast
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings">
            <summary>
            UDP detection settings
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings"/> is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings.BroadcastListeningPorts">
            <summary>
            Gets or sets the broadcast listening ports.
            </summary>
            <value>
            The broadcast listening ports.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings.BroadcastTargetPorts">
            <summary>
            Gets or sets the broadcast target ports.
            </summary>
            <value>
            The broadcast target ports.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings.DetectionMode">
            <summary>
            Gets or sets the detection mode.
            </summary>
            <value>
            The detection mode.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings.IPv4MulticastAddress">
            <summary>
            Gets or sets the IPV4 multicast address.
            </summary>
            <value>
            The i PV4 multicast address.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings.IPv6MulticastAddress">
            <summary>
            Gets or sets the IPV6 multicast address.
            </summary>
            <value>
            The i PV6 multicast address.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings.LogConfiguration">
            <summary>
            Logs the configuration.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Configuration.UDPDetectionSettings.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Connection.BroadcastServer">
            <summary>
            This is a server which sends UDP detection broadcast messages
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.BroadcastServer.#ctor(System.Net.IPEndPoint,System.Net.Sockets.UdpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Connection.BroadcastServer"/> class.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="client">The client.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.BroadcastServer.BeginReceive">
            <summary>
            Begins the receive.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.BroadcastServer.Shutdown">
            <summary>
            Shutdowns this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Connection.ConnectionManager">
            <summary>
            Process and manage the connection tasks
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.ConnectionManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Connection.ConnectionManager"/> class.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.ConnectionManager.InitializeTCPServers">
            <summary>
            Initializes the TCP servers.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.ConnectionManager.InitializeTCPConnections">
            <summary>
            Initializes the TCP connections.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.ConnectionManager.InitializeUDPDetector">
            <summary>
            Initializes the UDP detector.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.ConnectionManager.NetworkConnection_Disconnect(Forge.Net.Synapse.NetworkStream)">
            <summary>
            Networks the connection_ disconnect.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.ConnectionManager.Shutdown">
            <summary>
            Shutdowns this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.ConnectionManager.ConnectionTask.#ctor(Forge.Net.Synapse.AddressEndPoint,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Connection.ConnectionManager.ConnectionTask"/> class.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="reconnectOnFailure">if set to <c>true</c> [reconnect on failure].</param>
            <param name="delayBetweenAttemptsInMS">The delay between attempts in MS.</param>
            <param name="connectionTimeout">The connection timeout.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.ConnectionManager.ConnectionTask.NetworkStream">
            <summary>
            Gets or sets the network stream.
            </summary>
            <value>
            The network stream.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.ConnectionManager.ConnectionTask.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.Connection.NetworkConnectionTask">
            <summary>
            Represents a connection task
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.#ctor(Forge.Net.Synapse.NetworkStream,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Connection.NetworkConnectionTask"/> class.
            </summary>
            <param name="networkStream">The network stream.</param>
            <param name="localRequest">if set to <c>true</c> [local request].</param>
            <param name="disconnectOnConnectionDuplication">if set to <c>true</c> [disconnect on connection duplication].</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.TaskId">
            <summary>
            Gets the task id.
            </summary>
            <value>
            The task id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.RemoteHostPeer">
            <summary>
            Gets the remote host peer.
            </summary>
            <value>
            The remote host peer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.LocalRequest">
            <summary>
            Gets a value indicating whether [local request].
            </summary>
            <value>
              <c>true</c> if [local request]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.DisconnectOnConnectionDuplication">
            <summary>
            Gets a value indicating whether [disconnect on connection duplication].
            </summary>
            <value>
            	<c>true</c> if [disconnect on connection duplication]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.WaitForConnection(System.Int32)">
            <summary>
            Waits for connection.
            </summary>
            <param name="timeout">The timeout.</param>
            <returns>True, if ok, False on timeout</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.RaiseConnectionTaskFinished">
            <summary>
            Raises the connection task finished.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.NetworkConnection">
            <summary>
            Gets the network connection.
            </summary>
            <value>
            The network connection.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.RemoteNetworkPeerId">
            <summary>
            Gets or sets the remote network peer id.
            </summary>
            <value>
            The remote network peer id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.RemoteNetworkContextName">
            <summary>
            Gets or sets the name of the remote network context.
            </summary>
            <value>
            The name of the remote network context.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.ReplyTime">
            <summary>
            Gets or sets the reply time.
            </summary>
            <value>
            The reply time.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.InformationMessage">
            <summary>
            Gets or sets the information message.
            </summary>
            <value>
            The information message.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.StopWatch">
            <summary>
            Stops the watch.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkConnectionTask.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Connection.NetworkPeerSession">
            <summary>
            Represents a network peer session
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Connection.NetworkPeerSession.mRemotePeer">
            <summary>
            A távoli számítógép, akihez ez a session tartozik
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Connection.NetworkPeerSession.mNetworkConnection">
            <summary>
            Ez az átjáró a célszámítógéphez. Ez változhat és a túloldalon lehet másvalaki van, aki majd továbbítja az üzenetet.
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Connection.NetworkPeerSession.mActiveConnections">
            <summary>
            Tárolja a saját tulajdonú közvetlen hálózati kapcsolatokat
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Connection.NetworkPeerSession.mReplyTime">
            <summary>
            A válaszidő mértéke. Ez az érték nem a fizikai átjáró válaszideje, hanem a grafban való teljes utazás várható ideje.
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Connection.NetworkPeerSession.mMessageIDs">
            <summary>
            Tárolja azokat az üzenetkódokat, amiket ez a peer már ide küldött és hogy hányszor
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkPeerSession.#ctor(Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Connection.NetworkPeerSession"/> class.
            </summary>
            <param name="remotePeer">The remote peer.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkPeerSession.RemotePeer">
            <summary>
            Gets the remote peer.
            </summary>
            <value>
            The remote peer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkPeerSession.NetworkConnection">
            <summary>
            Gets or sets the network connection.
            </summary>
            <value>
            The network connection.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkPeerSession.ReplyTime">
            <summary>
            Gets or sets the reply time.
            </summary>
            <value>
            The reply time.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Connection.NetworkPeerSession.ActiveConnections">
            <summary>
            Gets the active connections.
            </summary>
            <value>
            The active connections.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkPeerSession.AddNetworkConnection(Forge.Net.TerraGraf.NetworkPeers.NetworkConnection)">
            <summary>
            Adds the network connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkPeerSession.RemoveNetworkConnection(Forge.Net.TerraGraf.NetworkPeers.NetworkConnection)">
            <summary>
            Removes the network connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkPeerSession.GetMessageIDCounter(System.Int64)">
            <summary>
            Gets the message ID counter.
            </summary>
            <param name="messageId">The message id.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkPeerSession.IncMessageIDCounter(System.Int64)">
            <summary>
            Incs the message ID counter.
            </summary>
            <param name="messageId">The message id.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Connection.NetworkPeerSession.MergeMessageIDCounters(System.Collections.Generic.Dictionary{System.Int64,System.Int32})">
            <summary>
            Merges the message ID counters.
            </summary>
            <param name="d">The d.</param>
        </member>
        <member name="T:Forge.Net.TerraGraf.Contexts.NetworkContext">
            <summary>
            Represent a network context
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Contexts.NetworkContext.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Contexts.NetworkContext.KnownNetworkContexts">
            <summary>
            Gets the known network contexts.
            </summary>
            <value>
            The known network contexts.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Contexts.NetworkContext.KnownNetworkPeers">
            <summary>
            Gets the network peers which known in this network context.
            </summary>
            <value>
            The known network peers.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkContext.GetNetworkContextByName(System.String)">
            <summary>
            Gets the name of the network context by.
            </summary>
            <param name="name">The name.</param>
            <returns>The Network Context. Null if the name does not exist.</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkContext.GetNetworkPeerById(System.String)">
            <summary>
            Gets the network peer by id.
            </summary>
            <param name="id">The id.</param>
            <returns>The value or null</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkContext.GetNetworkPeerByName(System.String)">
            <summary>
            Gets the name of the network peer by.
            </summary>
            <param name="name">The name.</param>
            <returns>Network Peer implementation or null</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkContext.CompareTo(Forge.Net.TerraGraf.Contexts.NetworkContext)">
            <summary>
            Compares to.
            </summary>
            <param name="other">The other.</param>
            <returns>0 if equals, 1 - greater, -1 - lower</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkContext.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkContext.CreateNetworkContext(System.String)">
            <summary>
            Creates the network context.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Contexts.NetworkContext.InternalNetworkPeers">
            <summary>
            Aki elviszi, lockolja!
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Contexts.NetworkContextRuleManager">
            <summary>
            Check rules for Network context
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkContextRuleManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Contexts.NetworkContextRuleManager"/> class.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkContextRuleManager.CheckSeparation(System.String,System.String)">
            <summary>
            Check for separation
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns>True, if the network context see each other. Otherwise false.</returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Contexts.NetworkPeerContext">
            <summary>
            Represents the information about network peers
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Contexts.NetworkPeerContext.KnownNetworkPeers">
            <summary>
            Gets the known network peers EXCEPT ME. Localhost not listed in this collection.
            </summary>
            <value>
            The known network peers.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkPeerContext.GetNetworkPeerById(System.String)">
            <summary>
            Gets the network peer by id. Search in global list.
            </summary>
            <param name="id">The id.</param>
            <returns>The Network Peer Remote</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkPeerContext.GetNetworkPeerByName(System.String)">
            <summary>
            Gets the name of the network peer by. Search in global list.
            </summary>
            <param name="name">The name.</param>
            <returns>The Network Peer Remote</returns>
        </member>
        <member name="P:Forge.Net.TerraGraf.Contexts.NetworkPeerContext.InternalKnownNetworkPeers">
            <summary>
            Gets the known network peers EXCEPT ME. Localhost not listed in this collection.
            </summary>
            <value>
            The known network peers.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkPeerContext.CreateNetworkPeer(Forge.Net.TerraGraf.NetworkInfo.NetworkPeer)">
            <summary>
            Creates the network peer.
            </summary>
            <param name="peer">The peer.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkPeerContext.RefreshNetworkPeerWithoutRelations(Forge.Net.TerraGraf.NetworkInfo.NetworkPeer,Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote)">
            <summary>
            Refreshes the network peer.
            </summary>
            <param name="sourcePeer">The source peer.</param>
            <param name="targetPeer">The target peer.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkPeerContext.RefreshNetworkPeerOnlyRelations(Forge.Net.TerraGraf.NetworkInfo.NetworkPeer,Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote)">
            <summary>
            Refreshes the network peer without relations.
            </summary>
            <param name="sourcePeer">The source peer.</param>
            <param name="targetPeer">The target peer.</param>
        </member>
        <member name="T:Forge.Net.TerraGraf.Contexts.NetworkPeerDataContext">
            <summary>
            Representation the context of a peer
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkPeerDataContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Contexts.NetworkPeerDataContext"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Contexts.NetworkPeerDataContext.PropertyItems">
            <summary>
            Gets the property items.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkPeerDataContext.GetValueByPath(Forge.Configuration.IPropertyItem,System.String)">
            <summary>
            Gets the value by path.
            </summary>
            <param name="pi">The pi.</param>
            <param name="configPath">The config path.</param>
            <returns>The value</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkPeerDataContext.GetPropertyItemByPath(Forge.Configuration.IPropertyItem,System.String)">
            <summary>
            Gets the property item by path.
            </summary>
            <param name="pi">The pi.</param>
            <param name="configPath">The config path.</param>
            <returns>The property item</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Contexts.NetworkPeerDataContext.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Formatters.MessageFormatter`1">
            <summary>
            Serialize or deserialize a message
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="M:Forge.Net.TerraGraf.Formatters.MessageFormatter`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Formatters.MessageFormatter`1"/> class.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Formatters.MessageFormatter`1.CanRead(System.IO.Stream)">
            <summary>
            Determines whether this instance can read the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>
              <c>true</c> if this instance can read the specified stream; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Formatters.MessageFormatter`1.CanWrite(`0)">
            <summary>
            Determines whether this instance can write the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>true</c> if this instance can write the specified item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Formatters.MessageFormatter`1.Read(System.IO.Stream)">
            <summary>
            Reads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The data</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Formatters.MessageFormatter`1.Write(System.IO.Stream,`0)">
            <summary>
            Writes the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Formatters.MessageFormatter`1.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.ISocketSafeHandle">
            <summary>
            Represents a safe socket handler which provides information about a socket.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.ISocketSafeHandle.Pool(System.Int32,System.Net.Sockets.SelectMode)">
            <summary>
            Detect the status of the socket
            </summary>
            <param name="microSeconds">The micro seconds.</param>
            <param name="selectMode">The select mode.</param>
            <returns>True, if the conditions match with select mode</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.ISocketSafeHandle.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.ISocketSafeHandle.Close(System.Int32)">
            <summary>
            Close the socket and wait for the specified time.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.AddressFamily">
            <summary>
            Gets the address family.
            </summary>
            <value>
            The address family.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.Connected">
            <summary>
            Gets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.ISocketSafeHandle"/> is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.EnableBroadcast">
            <summary>
            Gets or sets a value indicating whether [enable broadcast].
            </summary>
            <value>
              <c>true</c> if [enable broadcast]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.IsBound">
            <summary>
            Gets a value indicating whether this instance is bound.
            </summary>
            <value>
              <c>true</c> if this instance is bound; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.LocalEndPoint">
            <summary>
            Gets the local end point.
            </summary>
            <value>
            The local end point.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.NoDelay">
            <summary>
            Gets or sets a value indicating whether [no delay].
            </summary>
            <value>
              <c>true</c> if [no delay]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.ReceiveBufferSize">
            <summary>
            Gets or sets the size of the receive buffer.
            </summary>
            <value>
            The size of the receive buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout.
            </summary>
            <value>
            The receive timeout.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.RemoteEndPoint">
            <summary>
            Gets or sets the remote end point.
            </summary>
            <value>
            The remote end point.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.SendBufferSize">
            <summary>
            Gets or sets the size of the send buffer.
            </summary>
            <value>
            The size of the send buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.SendTimeout">
            <summary>
            Gets or sets the send timeout.
            </summary>
            <value>
            The send timeout.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.ProtocolType">
            <summary>
            Gets the type of the protocol.
            </summary>
            <value>
            The type of the protocol.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.SocketType">
            <summary>
            Gets the type of the socket.
            </summary>
            <value>
            The type of the socket.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.ISocketSafeHandle.Ttl">
            <summary>
            Gets or sets the TTL.
            </summary>
            <value>
            The TTL.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.MessageAcknowledge">
            <summary>
            Represents an acknowledge message which confirms a request
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageAcknowledge.#ctor(System.String,System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.MessageAcknowledge"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
            <param name="messageIdToAck">The message id to ack.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageAcknowledge.MessageIdToAck">
            <summary>
            Gets the message id to ack.
            </summary>
            <value>
            The message id to ack.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageAcknowledge.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageAcknowledge.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageAcknowledge.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.MessageArrivedEventArgs">
            <summary>
            Event args for message arrived event
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageArrivedEventArgs.#ctor(Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.MessageArrivedEventArgs"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageArrivedEventArgs.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.MessageBase">
            <summary>
            Abstract base class for system messages
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageBase.#ctor(System.String,System.Int64,Forge.Net.TerraGraf.Messaging.MessageCodeEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.MessageBase"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="messageId">The message id.</param>
            <param name="messageCode">The message code.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageBase.SenderId">
            <summary>
            Üzenet küldő azonosítója
            </summary>
            <value>
            The sender id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageBase.MessageId">
            <summary>
            Üzenet azonosítója
            </summary>
            <value>
            The message id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageBase.MessageCode">
            <summary>
            Üzenet kódja
            </summary>
            <value>
            The message code.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageBase.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageBase.Equals(Forge.Net.TerraGraf.Messaging.MessageBase)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns>True, if the other class is equals with this.</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageBase.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.MessageCodeEnum">
            <summary>
            Enums for messages
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.Undefinied">
            <summary>
            Undefinied message
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.UdpBroadcast">
            <summary>
            Message for UDP broadcasting
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.Acknowledge">
            <summary>
            Acknowledge message for all TCP message
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.SocketRawData">
            <summary>
            Message for send user raw data
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.SocketOpenRequest">
            <summary>
            Message for open a socket connection request
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.SocketOpenResponse">
            <summary>
            Message for open a socket connection response
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.SocketClose">
            <summary>
            Message for close a socket connection
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.Negotiation">
            <summary>
            Message when a new connection established and sending a graf descriptor message
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.TerraGrafInformation">
            <summary>
            TerraGraf information message
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.TerraGrafPeerUpdate">
            <summary>
            Update information for a network peer
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageCodeEnum.LowLevelTcpAcknowledge">
            <summary>
            Low level Tcp message acknowledge
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.MessageLowLevelAcknowledge">
            <summary>
            Acknowledge message for a low level Tcp system message
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageLowLevelAcknowledge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.MessageLowLevelAcknowledge"/> class.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.MessagePriorityEnum">
            <summary>
            Represents the priority of a message
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessagePriorityEnum.High">
            <summary>
            High priority for acknowledge messages
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessagePriorityEnum.Normal">
            <summary>
            Normal priority for system messages
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessagePriorityEnum.Low">
            <summary>
            Lower priortity for user messages
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.MessageSendEventArgs">
            <summary>
            Event arguments for message task sending event
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageSendEventArgs.#ctor(Forge.Net.TerraGraf.Messaging.MessageTask)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.MessageSendEventArgs"/> class.
            </summary>
            <param name="messageTask">The message task.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageSendEventArgs.#ctor(Forge.Net.TerraGraf.Messaging.MessageTask,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.MessageSendEventArgs"/> class.
            </summary>
            <param name="messageTask">The message task.</param>
            <param name="messageSent">if set to <c>true</c> [message sent].</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageSendEventArgs.MessageTask">
            <summary>
            Gets the message task.
            </summary>
            <value>
            The message task.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageSendEventArgs.MessageSent">
            <summary>
            Gets a value indicating whether [message sent].
            </summary>
            <value>
              <c>true</c> if [message sent]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.MessageTask">
            <summary>
            Represents a task for message sending
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageTask.#ctor(Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.MessageTask"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageTask.#ctor(Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase,System.Threading.EventWaitHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.MessageTask"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="sentEvent">The sent event.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageTask.Message">
            <summary>
            Gets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageTask.IsSuccess">
            <summary>
            Gets or sets a value indicating whether this instance is success.
            </summary>
            <value>
            	<c>true</c> if this instance is success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageTask.ReplyTime">
            <summary>
            Gets the reply time.
            </summary>
            <value>
            The reply time.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageTask.SentEvent">
            <summary>
            Gets the sent event.
            </summary>
            <value>
            The sent event.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageTask.TimeWatch">
            <summary>
            Gets the time watch.
            </summary>
            <value>
            The time watch.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.MessageTask.MessageSubscribedToAcknowledge">
            <summary>
            Gets or sets a value indicating whether [message subscribed to acknowledge].
            </summary>
            <value>
            	<c>true</c> if [message subscribed to acknowledge]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageTask.WaitForSentEvent(System.Int32)">
            <summary>
            Waits for sent event, if the message is TCP and sent by me.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageTask.RaiseSentEventFinished">
            <summary>
            Raises the sent event finished.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageTask.Equals(Forge.Net.TerraGraf.Messaging.MessageTask)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageTask.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageTask.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.MessageTask.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.MessageTypeEnum">
            <summary>
            Delivery mode for a message
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageTypeEnum.Tcp">
            <summary>
            Guaranteed and keep the order of the packages
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.Messaging.MessageTypeEnum.Udp">
            <summary>
            Not guaranted package type
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.NegotiationMessage">
            <summary>
            Negotiation message for peer handshake
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.NegotiationMessage.#ctor(System.String,System.String,System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.NegotiationMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="networkContextName">Name of the network context.</param>
            <param name="version">The version.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.NegotiationMessage.NetworkContextName">
            <summary>
            Gets the name of the network context.
            </summary>
            <value>
            The name of the network context.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.NegotiationMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.NegotiationMessage.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.NegotiationMessage.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.NegotiationMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.SocketCloseMessage">
            <summary>
            Message for close an active TCP socket connection
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketCloseMessage.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int64,System.Int64,Forge.Net.TerraGraf.Messaging.MessageTypeEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.SocketCloseMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
            <param name="senderPort">The sender port.</param>
            <param name="targetPort">The target port.</param>
            <param name="senderSocketId">The sender socket id.</param>
            <param name="targetSocketId">The target socket id.</param>
            <param name="messageType">Type of the message.</param>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.SocketMessage">
            <summary>
            Represents a socket communication message
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketMessage.#ctor(System.String,System.String,Forge.Net.TerraGraf.Messaging.MessageCodeEnum,Forge.Net.TerraGraf.Messaging.MessageTypeEnum,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.SocketMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
            <param name="messageCode">The message code.</param>
            <param name="messageType">Type of the message.</param>
            <param name="senderPort">The sender port.</param>
            <param name="targetPort">The target port.</param>
            <param name="senderSocketId">The sender socket id.</param>
            <param name="targetSocketId">The target socket id.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.SocketMessage.SenderSocketId">
            <summary>
            Gets the sender socket id.
            </summary>
            <value>
            The sender socket id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.SocketMessage.SenderPort">
            <summary>
            Gets the sender port.
            </summary>
            <value>
            The sender port.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.SocketMessage.TargetSocketId">
            <summary>
            Gets the target socket id.
            </summary>
            <value>
            The target socket id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.SocketMessage.TargetPort">
            <summary>
            Gets the target port.
            </summary>
            <value>
            The target port.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketMessage.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketMessage.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.SocketOpenRequestMessage">
            <summary>
            Message for request to open a new TCP socket connection
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketOpenRequestMessage.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.SocketOpenRequestMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
            <param name="senderPort">The sender port.</param>
            <param name="targetPort">The target port.</param>
            <param name="senderSocketId">The sender socket id.</param>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.SocketOpenResponseMessage">
            <summary>
            Message for request to open a new TCP socket connection response
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketOpenResponseMessage.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.SocketOpenResponseMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
            <param name="senderPort">The sender port.</param>
            <param name="targetPort">The target port.</param>
            <param name="senderSocketId">The sender socket id.</param>
            <param name="targetSocketId">The target socket id.</param>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage">
            <summary>
            Message for send socket user raw data
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage.#ctor(System.String,System.Int32,System.Int32,System.Byte[])">
            <summary>
            UDP Broadcast, initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="senderPort">The sender port.</param>
            <param name="targetPort">The target port.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage.#ctor(System.String,System.String,System.Int32,System.Int32,System.Byte[])">
            <summary>
            UDP, initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
            <param name="senderPort">The sender port.</param>
            <param name="targetPort">The target port.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int64,System.Int64,System.UInt64,System.Byte[])">
            <summary>
            TCP, initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
            <param name="senderPort">The sender port.</param>
            <param name="targetPort">The target port.</param>
            <param name="senderSocketId">The sender socket id.</param>
            <param name="targetSocketId">The target socket id.</param>
            <param name="packetOrderNumber">The packet order number.</param>
            <param name="data">The data.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage.PacketOrderNumber">
            <summary>
            Gets the packet order number.
            </summary>
            <value>
            The packet order number.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage.Data">
            <summary>
            Gets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.SocketRawDataMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage">
            <summary>
            Represent a TerraGraf network structure message
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.#ctor(System.String)">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage"/> class from being created.
            </summary>
            <param name="senderId">The sender id.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.#ctor(System.String,System.String)">
            <summary>
            Prevents a default instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage"/> class from being created.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.#ctor(System.String,System.String,Forge.Net.TerraGraf.NetworkInfo.TerraGrafNetworkInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
            <param name="networkInfo">The network info.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.#ctor(System.String,Forge.Net.TerraGraf.NetworkInfo.TerraGrafNetworkInformation,Forge.Net.TerraGraf.NetworkInfo.PeerRelation)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="networkInfo">The network info.</param>
            <param name="targetHostRelation">The target host relation.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.#ctor(System.String,Forge.Net.TerraGraf.NetworkInfo.PeerRelation)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetHostRelation">The target host relation.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.#ctor(System.String,Forge.Net.TerraGraf.NetworkInfo.BlackHoleContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="blackHoleContainer">The black hole container.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.#ctor(System.String,Forge.Net.TerraGraf.NetworkInfo.TerraGrafNetworkInformation,Forge.Net.TerraGraf.NetworkInfo.BlackHoleContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="networkInfo">The network info.</param>
            <param name="blackHoleContainer">The black hole container.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.#ctor(System.String,System.Int64,Forge.Net.TerraGraf.NetworkInfo.TerraGrafNetworkInformation,Forge.Net.TerraGraf.NetworkInfo.PeerRelation,Forge.Net.TerraGraf.NetworkInfo.BlackHoleContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="messageId">The message id.</param>
            <param name="networkInfo">The network info.</param>
            <param name="targetHostRelation">The target host relation.</param>
            <param name="blackHoleContainer">The black hole container.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.NetworkInfo">
            <summary>
            Gets the network info.
            </summary>
            <value>
            The network info.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.TargetHostRelation">
            <summary>
            Gets the target host relation.
            </summary>
            <value>
            The target host relation.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.BlackHoleContainer">
            <summary>
            Gets the black hole container.
            </summary>
            <value>
            The black hole container.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafInformationMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase">
            <summary>
            Represent a base message for high level terragraf messages
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase.#ctor(System.String,System.String,Forge.Net.TerraGraf.Messaging.MessageCodeEnum,System.Int64,Forge.Net.TerraGraf.Messaging.MessagePriorityEnum,Forge.Net.TerraGraf.Messaging.MessageTypeEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="targetId">The target id.</param>
            <param name="messageCode">The message code.</param>
            <param name="messageId">The message id.</param>
            <param name="priority">The priority.</param>
            <param name="messageType">Type of the message.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase.Priority">
            <summary>
            Priortiy level of the message
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase.MessageType">
            <summary>
            Type of the message
            </summary>
            <value>
            The type of the message.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase.TargetId">
            <summary>
            Gets the target id.
            </summary>
            <value>
            The target id.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage">
            <summary>
            Represents an unpdate information message of a network peer
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage.#ctor(System.String,Forge.Net.TerraGraf.NetworkInfo.NATGatewayContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="natGatewayContainer">The nat gateway container.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage.#ctor(System.String,Forge.Net.TerraGraf.NetworkInfo.PeerContextContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="peerContextContainer">The peer context container.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage.#ctor(System.String,Forge.Net.TerraGraf.NetworkInfo.ServerContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="serverContainer">The server container.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage.NATGatewayContainer">
            <summary>
            Gets the NAT gateway container.
            </summary>
            <value>
            The NAT gateway container.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage.PeerContextContainer">
            <summary>
            Gets the peer context container.
            </summary>
            <value>
            The peer context container.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage.ServerContainer">
            <summary>
            Gets the server container.
            </summary>
            <value>
            The server container.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.TerraGrafPeerUpdateMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.Messaging.UdpBroadcastMessage">
            <summary>
            Represents a message which broadcasted into the network while searching other network peers
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Messaging.UdpBroadcastMessage.#ctor(System.String,System.String,Forge.Net.Synapse.AddressEndPoint[],Forge.Net.Synapse.AddressEndPoint[])">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Messaging.UdpBroadcastMessage"/> class.
            </summary>
            <param name="senderId">The sender id.</param>
            <param name="networkContextName">Name of the network context.</param>
            <param name="natGateways">The nat gateways.</param>
            <param name="tcpServers">The TCP servers.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.UdpBroadcastMessage.NetworkContextName">
            <summary>
            Gets the name of the network context.
            </summary>
            <value>
            The name of the network context.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.UdpBroadcastMessage.NATGateways">
            <summary>
            Gets the NAT gateways.
            </summary>
            <value>
            The NAT gateways.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Messaging.UdpBroadcastMessage.TCPServers">
            <summary>
            Gets the TCP servers.
            </summary>
            <value>
            The TCP servers.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkInfo.BlackHoleContainer">
            <summary>
            Represents a blackhole state and identifier of the state
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkInfo.BlackHoleContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkInfo.BlackHoleContainer"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.BlackHoleContainer.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.BlackHoleContainer.IsBlackHole">
            <summary>
            Gets or sets a value indicating whether this instance is black hole.
            </summary>
            <value>
            	<c>true</c> if this instance is black hole; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkInfo.NATGatewayContainer">
            <summary>
            Represents gateway addresses of a peer
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkInfo.NATGatewayContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkInfo.NATGatewayContainer"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NATGatewayContainer.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NATGatewayContainer.Gateways">
            <summary>
            Gets or sets the gateways.
            </summary>
            <value>
            The gateways.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer">
            <summary>
            Represent a network peer which sending on the network
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.Id">
            <summary>
            Unique identifier: AppId + ContextName + Hostname
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.HostName">
            <summary>
            Real host name of the computer
            </summary>
            <value>
            The name of the host.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.NetworkContext">
            <summary>
            Network context name
            </summary>
            <value>
            The network context.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.BlackHoleContainer">
            <summary>
            Gets or sets the black hole container.
            </summary>
            <value>
            The black hole container.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.PeerContext">
            <summary>
            Peer context
            </summary>
            <value>
            The peer context.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.Version">
            <summary>
            Version of the TerraGraf
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.TCPServers">
            <summary>
            TCP szervereim
            </summary>
            <value>
            The TCP servers.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.NATGateways">
            <summary>
            NAT gateways
            </summary>
            <value>
            The NAT gateways.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.NetworkPeer.PeerRelations">
            <summary>
            List of direct connections
            </summary>
            <value>
            The peer relations.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkInfo.PeerContextContainer">
            <summary>
            Represents a peer context
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkInfo.PeerContextContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkInfo.PeerContextContainer"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.PeerContextContainer.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.PeerContextContainer.PeerContext">
            <summary>
            Gets or sets the peer context.
            </summary>
            <value>
            The peer context.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkInfo.PeerRelation">
            <summary>
            Represent a relation between two network peer
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkInfo.PeerRelation.#ctor(System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkInfo.PeerRelation"/> class.
            </summary>
            <param name="stateId">The state id.</param>
            <param name="peerA">The peer A.</param>
            <param name="peerB">The peer B.</param>
            <param name="status">if set to <c>true</c> [status].</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.PeerRelation.StateId">
            <summary>
            Gets or sets the stream id.
            </summary>
            <value>
            The stream id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.PeerRelation.PeerA">
            <summary>
            Gets or sets the peer A.
            </summary>
            <value>
            The peer A.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.PeerRelation.PeerB">
            <summary>
            Gets or sets the peer B.
            </summary>
            <value>
            The peer B.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.PeerRelation.Connected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.NetworkInfo.PeerRelation"/> is status.
            </summary>
            <value>
              <c>true</c> if status; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkInfo.PeerRelationContainer">
            <summary>
            Represents a peer relation container with state
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkInfo.PeerRelationContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkInfo.PeerRelationContainer"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.PeerRelationContainer.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.PeerRelationContainer.PeerRelations">
            <summary>
            Gets or sets the peer relations.
            </summary>
            <value>
            The peer relations.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkInfo.ServerContainer">
            <summary>
            Represents the TCP listener servers of a peer
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkInfo.ServerContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkInfo.ServerContainer"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.ServerContainer.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.ServerContainer.Servers">
            <summary>
            Gets or sets the servers.
            </summary>
            <value>
            The servers.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkInfo.TerraGrafNetworkInformation">
            <summary>
            Represent a viewpoint of current network peer
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkInfo.TerraGrafNetworkInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkInfo.TerraGrafNetworkInformation"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.TerraGrafNetworkInformation.Sender">
            <summary>
            Myself
            </summary>
            <value>
            The sender.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkInfo.TerraGrafNetworkInformation.KnownNetworkPeers">
            <summary>
            Known network computers
            </summary>
            <value>
            The known network peers.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkManager">
            <summary>
            Represents and manages the terragraf network
            </summary>
        </member>
        <member name="E:Forge.Net.TerraGraf.NetworkManager.NetworkPeerDiscovered">
            <summary>
            Occurs when [network peer discovered].
            </summary>
        </member>
        <member name="E:Forge.Net.TerraGraf.NetworkManager.NetworkPeerDistanceChanged">
            <summary>
            Occurs when [network peer distance changed].
            </summary>
        </member>
        <member name="E:Forge.Net.TerraGraf.NetworkManager.NetworkPeerUnaccessible">
            <summary>
            Occurs when [network peer unaccessible].
            </summary>
        </member>
        <member name="E:Forge.Net.TerraGraf.NetworkManager.NetworkPeerContextChanged">
            <summary>
            Occurs when [network peer context changed].
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.#ctor">
            <summary>
            Prevents a default instance of the <see cref="P:Forge.Net.TerraGraf.NetworkManager.InternalNetworkManager"/> class from being created.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.Localhost">
            <summary>
            Gets the localhost.
            </summary>
            <value>
            The localhost.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.LocalNetworkContext">
            <summary>
            Gets the current network context.
            </summary>
            <value>
            The local network context.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.ActiveSockets">
            <summary>
            Gets the active sockets.
            </summary>
            <value>
            The active sockets.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.IsShutdown">
            <summary>
            Gets a value indicating whether this instance is shutdown.
            </summary>
            <value>
            	<c>true</c> if this instance is shutdown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.InternalKnownNetworkContexts">
            <summary>
            Gets the internal known network contexts.
            </summary>
            <value>
            The internal known network contexts.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.InternalConfiguration">
            <summary>
            Gets the internal configuration.
            </summary>
            <value>
            The internal configuration.
            </value>
            <exception cref="T:Forge.InitializationException">Network has not been initialized.</exception>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.NetworkContextRuleManager">
            <summary>
            Gets the network context rule manager.
            </summary>
            <value>
            The network context rule manager.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.InternalNetworkManager">
            <summary>
            Gets the network manager.
            </summary>
            <value>
            The internal network manager.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.InternalLocalhost">
            <summary>
            Gets the internal localhost.
            </summary>
            <value>
            The internal localhost.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.SyncRoot">
            <summary>
            Gets the sync root.
            </summary>
            <value>
            The sync root.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.Start">
            <summary>
            Initializes this instance.
            </summary>
            <returns>Manager State</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.Stop">
            <summary>
            Shutdowns this instance.
            </summary>
            <returns>Manager State</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.StartServer(Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Starts the server.
            </summary>
            <param name="endPoint">The end point.</param>
            <returns>Identifier of the endpoint</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.StartServer(Forge.Net.Synapse.AddressEndPoint,Forge.Net.Synapse.NetworkServices.IServerStreamFactory)">
            <summary>
            Starts the server.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="serverStreamFactory">The server stream factory.</param>
            <returns>Identifier of the endpoint</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.StopServer(System.Int64)">
            <summary>
            Stops the server.
            </summary>
            <param name="serverId">The server id.</param>
            <returns>True, if the server stopped, otherwise False.</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.BeginConnect(Forge.Net.Synapse.AddressEndPoint,System.AsyncCallback,System.Object)">
            <summary>
            Begins the connect.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>Async property</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.BeginConnect(Forge.Net.Synapse.AddressEndPoint,Forge.Net.Synapse.NetworkServices.IClientStreamFactory,System.AsyncCallback,System.Object)">
            <summary>
            Begins the connect.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="clientStreamFactory">The client stream factory.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>Async property</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.BeginConnect(Forge.Net.Synapse.AddressEndPoint,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the connect.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="timeoutInMS">The timeout in MS.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>Async property</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.BeginConnect(Forge.Net.Synapse.AddressEndPoint,Forge.Net.Synapse.NetworkServices.IClientStreamFactory,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the connect.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="clientStreamFactory">The client stream factory.</param>
            <param name="timeoutInMS">The timeout in MS.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>Async property</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.Connect(Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Connects the specified end point.
            </summary>
            <param name="endPoint">The end point.</param>
            <returns>NetworkPeerRemote</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.Connect(Forge.Net.Synapse.AddressEndPoint,Forge.Net.Synapse.NetworkServices.IClientStreamFactory)">
            <summary>
            Connects the specified end point.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="clientStreamFactory">The client stream factory.</param>
            <returns>NetworkPeerRemote</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.Connect(Forge.Net.Synapse.AddressEndPoint,System.Int32)">
            <summary>
            Connects the specified end point.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="timeoutInMS">The timeout in MS.</param>
            <returns>NetworkPeerRemote</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.Connect(Forge.Net.Synapse.AddressEndPoint,Forge.Net.Synapse.NetworkServices.IClientStreamFactory,System.Int32)">
            <summary>
            Connects the specified end point.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="clientStreamFactory">The client stream factory.</param>
            <param name="timeoutInMS">The timeout in MS.</param>
            <returns>NetworkPeerRemote</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.EndConnect(System.IAsyncResult)">
            <summary>
            Ends the connect.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>NetworkPeerRemote</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.CreateSocketTcp">
            <summary>
            Creates the socket TCP.
            </summary>
            <returns>Socket</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.CreateSocketUdp">
            <summary>
            Creates the socket UDP.
            </summary>
            <returns>Socket</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalConnectAsync(Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote,System.Boolean,System.Boolean)">
            <summary>
            Trying to connect to a remote peer in the background.
            </summary>
            <param name="networkPeer">The network peer.</param>
            <param name="localRequest">if set to <c>true</c> [local request].</param>
            <param name="disconnectOnConnectionDuplication">if set to <c>true</c> [disconnect on connection duplication].</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalConnect(Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote,System.Boolean,System.Boolean)">
            <summary>
            Trying to connect to a remote peer.
            </summary>
            <param name="networkPeer">The network peer.</param>
            <param name="localRequest">if set to <c>true</c> [local request].</param>
            <param name="disconnectOnConnectionDuplication">if set to <c>true</c> [disconnect on connection duplication].</param>
            <returns>True, if the connection succeeded</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalConnect(Forge.Net.Synapse.AddressEndPoint,Forge.Net.Synapse.NetworkServices.IClientStreamFactory,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Internals the connect.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="clientStreamFactory">The client stream factory.</param>
            <param name="timeout">The timeout.</param>
            <param name="localRequest">if set to <c>true</c> [local request].</param>
            <param name="disconnectOnConnectionDuplication">if set to <c>true</c> [disconnect on connection duplication].</param>
            <returns>NetworkPeerRemote</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.ProcessConnection(Forge.Net.Synapse.NetworkStream,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Processes the connection.
            </summary>
            <param name="stream">The stream.</param>
            <param name="timeout">The timeout.</param>
            <param name="localRequest">if set to <c>true</c> [local request].</param>
            <param name="disconnectOnConnectionDuplication">if set to <c>true</c> [disconnect on connection duplication].</param>
            <returns>NetworkPeerRemote</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalSendMessage(Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase,Forge.Net.TerraGraf.NetworkPeers.NetworkConnection)">
            <summary>
            Internals the send message.
            </summary>
            <param name="message">The message.</param>
            <param name="exceptConnection">The except connection.</param>
            <returns>MessageTask</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalSendMessage(Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase,Forge.Net.TerraGraf.NetworkPeers.NetworkConnection,System.Threading.EventWaitHandle)">
            <summary>
            Internals the send message.
            </summary>
            <param name="message">The message.</param>
            <param name="exceptConnection">The except connection.</param>
            <param name="sentEvent">The sent event.</param>
            <returns>MessageTask</returns>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkManager.InternalCurrentNetworkContext">
            <summary>
            Gets the internal current network context.
            </summary>
            <value>
            The internal current network context.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalBlackHole(System.Boolean)">
            <summary>
            Blacks the hole.
            </summary>
            <param name="state">if set to <c>true</c> [state].</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalSendLocalhostPeerContext(Forge.Net.TerraGraf.Contexts.NetworkPeerDataContext)">
            <summary>
            Internals the send localhost peer context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalStartTCPServer(Forge.Net.Synapse.AddressEndPoint,Forge.Net.Synapse.NetworkServices.IServerStreamFactory)">
            <summary>
            Start TCP server internally.
            </summary>
            <param name="ep">The ep.</param>
            <param name="serverStreamFactory">The server stream factory.</param>
            <returns>Identifier of the server</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalSendTCPServers">
            <summary>
            Send TCP servers.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalSendNATGateways">
            <summary>
            Send NAT gateways.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalSocketRegister(Forge.Net.TerraGraf.Socket)">
            <summary>
            Register a new binded socket
            </summary>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.InternalSocketUnregister(Forge.Net.TerraGraf.Socket)">
            <summary>
            Unregister a socket
            </summary>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.DoInitializationCheck">
            <summary>
            Does the initialization check.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.OnNetworkPeerContextChanged(Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote,System.Boolean)">
            <summary>
            Called when [network peer context changed].
            </summary>
            <param name="peer">The peer.</param>
            <param name="asyncEvent">if set to <c>true</c> [async event].</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.Initialize(System.Boolean)">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkManager.CheckMessageForDuplicationProcessAndForward(Forge.Net.TerraGraf.Messaging.TerraGrafMessageBase,Forge.Net.TerraGraf.NetworkPeers.NetworkConnection)">
            <summary>
            Checks the message for duplication process and forward.
            </summary>
            <param name="message">The message.</param>
            <param name="exceptConnection">The except connection.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeerChangedEventArgs">
            <summary>
            EventArgs for network peer changed event
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeerChangedEventArgs.#ctor(System.Collections.Generic.ICollection{Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote})">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeerChangedEventArgs"/> class.
            </summary>
            <param name="networkPeers">The network peers.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeerChangedEventArgs.NetworkPeers">
            <summary>
            Gets the network peers.
            </summary>
            <value>
            The network peers.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeerContextEventArgs">
            <summary>
            Network peer data context change event argument
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeerContextEventArgs.#ctor(Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeerContextEventArgs"/> class.
            </summary>
            <param name="networkPeer">The network peer.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeerContextEventArgs.NetworkPeer">
            <summary>
            Gets the network peer.
            </summary>
            <value>
            The network peer.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeerDistanceChangedEventArgs">
            <summary>
            Peer Distance changed eventArgs
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeerDistanceChangedEventArgs.#ctor(System.Collections.Generic.ICollection{Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote},System.Collections.Generic.IDictionary{Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote,System.Int32},System.Collections.Generic.IDictionary{Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeerDistanceChangedEventArgs"/> class.
            </summary>
            <param name="networkPeers">The network peers.</param>
            <param name="networkPeersDistanceBefore">The network peers distance before.</param>
            <param name="networkPeersDistanceAfter">The network peers distance after.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeerDistanceChangedEventArgs.DistanceBefore">
            <summary>
            Gets the distance before.
            </summary>
            <value>
            The distance before.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeerDistanceChangedEventArgs.DistanceAfter">
            <summary>
            Gets the distance after.
            </summary>
            <value>
            The distance after.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.BlackHoleContainer">
            <summary>
            Represents a black hole and its state
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.BlackHoleContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.BlackHoleContainer"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.BlackHoleContainer.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.BlackHoleContainer.IsBlackHole">
            <summary>
            Gets or sets a value indicating whether this instance is black hole.
            </summary>
            <value>
            	<c>true</c> if this instance is black hole; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.BlackHoleContainer.BuildBlackHoleContainer">
            <summary>
            Builds the black hole container.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.INetworkConnection">
            <summary>
            Represent a public network connection
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkConnection.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkConnection.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
            	<c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.INetworkConnection.Close">
            <summary>
            Closes this connection.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.INetworkPeer">
            <summary>
            Represent shared properties of a network peer
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeer.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeer.HostName">
            <summary>
            Gets the name of the host.
            </summary>
            <value>
            The name of the host.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeer.NetworkContext">
            <summary>
            Gets the network context.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeer.PeerContext">
            <summary>
            Gets the peer context.
            </summary>
            <value>
            The peer context.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeer.PeerType">
            <summary>
            Gets the type of the peer.
            </summary>
            <value>
            The type of the peer.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerLocal">
            <summary>
            Represents a public local network peer
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerLocal.PeerContextLock">
            <summary>
            Gets the peer context lock.
            </summary>
            <value>
            The peer context lock.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerLocal.PeerContext">
            <summary>
            Sets the peer context.
            </summary>
            <value>
            The peer context.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerLocal.IsBlackHole">
            <summary>
            Gets a value indicating whether this instance is black hole.
            </summary>
            <value>
            	<c>true</c> if this instance is black hole; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerLocal.TCPServers">
            <summary>
            Gets the TCP servers.
            </summary>
            <value>
            The TCP servers.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote">
            <summary>
            Represents a public remote peer
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote.Distance">
            <summary>
            Gets the distance.
            </summary>
            <value>
            The distance.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote.ReplyTime">
            <summary>
            Gets the reply time.
            </summary>
            <value>
            The reply time.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote.ActiveNetworkConnection">
            <summary>
            Gets the active network connection.
            </summary>
            <value>
            The active network connection.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.INetworkPeerRemote.NetworkConnections">
            <summary>
            Gets the network connections.
            </summary>
            <value>
            The network connections.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.NATGateway">
            <summary>
            Represents a NAT gateway
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGateway.#ctor(Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.NATGateway"/> class.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NATGateway.EndPoint">
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NATGateway.Attempts">
            <summary>
            Gets the attempts.
            </summary>
            <value>
            The attempts.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NATGateway.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.NetworkPeers.TCPServer"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGateway.IncAttempts">
            <summary>
            Increment the attempt number.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGateway.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGateway.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection">
            <summary>
            Represents the collection of NAT gateways
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection.NATGateways">
            <summary>
            Gets the NAT gateways. Lock it, if you want to modify the collection.
            </summary>
            <value>
            The NAT gateways.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection.BuildNATGatewayContainer">
            <summary>
            Builds the server container.
            </summary>
            <returns>NATGatewayContainer</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection.SelectNATGateWay">
            <summary>
            Selects the NAT gate way.
            </summary>
            <returns>NATGateway</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection.GetNeverTriedServer">
            <summary>
            Visszaadja az első olyan gateway-t, amit még sosem próbáltunk
            </summary>
            <returns>Kiválasztott szerver vagy null, ha már mindent próbáltunk legalább 1x</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection.GetGoodServer">
            <summary>
            Visszaad egy gateway-t, amin már volt sikeres csatlakoztatás
            </summary>
            <returns>Kiválasztott gateway vagy null, ha nem talált sikeresen csatlakozott gateway-t</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NATGatewayCollection.GetLeastTriedServer">
            <summary>
            Visszaadja azt a gateway-t, amit eddig a legkevesebbet próbáltunk.
            Ha mindegyiket egyforma mennyiségben próbáltuk, akkor null-t ad vissza.
            </summary>
            <returns>Kiválasztott gateway vagy null</returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection">
            <summary>
            Represents a live network connection with its physical reply time
            </summary>
        </member>
        <member name="E:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.Disconnect">
            <summary>
            Occurs when [disconnect].
            </summary>
        </member>
        <member name="E:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.MessageArrived">
            <summary>
            Occurs when [message arrived].
            </summary>
        </member>
        <member name="E:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.MessageSendBefore">
            <summary>
            Occurs when [message send before].
            </summary>
        </member>
        <member name="E:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.MessageSendAfter">
            <summary>
            Occurs when [message send after].
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.#ctor(Forge.Net.TerraGraf.Connection.NetworkConnectionTask,Forge.Net.Synapse.NetworkStream)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection"/> class.
            </summary>
            <param name="connectionTask">The connection task.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.NetworkStream">
            <summary>
            Gets the network stream.
            </summary>
            <value>
            The network stream.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.ReplyTime">
            <summary>
            Gets or sets the reply time.
            </summary>
            <value>
            The reply time.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.OwnerSession">
            <summary>
            Gets or sets the owner session.
            </summary>
            <value>
            The owner session.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.ConnectionTask">
            <summary>
            Gets the connection task.
            </summary>
            <value>
            The connection task.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
            	<c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.CopyOtherNetworkConnectionContent(Forge.Net.TerraGraf.NetworkPeers.NetworkConnection)">
            <summary>
            Copies the content of the other network connection.
            </summary>
            <param name="other">The other.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.SetFinishedToTaskFailed(System.Collections.Generic.Dictionary{System.Int64,Forge.Net.TerraGraf.Messaging.MessageTask})">
            <summary>
            Sets the finished to task failed.
            </summary>
            <param name="messagesToAcknowledge">The messages to acknowledge.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.AddMessageTask(Forge.Net.TerraGraf.Messaging.MessageTask)">
            <summary>
            Adds the message task.
            </summary>
            <param name="messageTask">The message task.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.InternalClose">
            <summary>
            Internals the close.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.Equals(Forge.Net.TerraGraf.NetworkPeers.NetworkConnection)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns>True, if the other class is equals with this.</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkConnection.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerDataContextContainer">
            <summary>
            Represent a peer data context container
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerDataContextContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerDataContextContainer"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerDataContextContainer.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerDataContextContainer.PeerContext">
            <summary>
            Gets or sets the peer context.
            </summary>
            <value>
            The peer context.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerDataContextContainer.BuildPeerContextContainer">
            <summary>
            Builds the peer context container.
            </summary>
            <returns>PeerContextContainer</returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerLocal">
            <summary>
            Represents the localhost
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerLocal.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerLocal"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerLocal.PeerContextLock">
            <summary>
            Gets the peer context lock.
            </summary>
            <value>
            The peer context lock.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerLocal.PeerContext">
            <summary>
            Gets the peer context.
            </summary>
            <exception cref="T:System.InvalidOperationException">Peer context data must have been locked before you get, modify and set it.</exception>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerLocal.IsBlackHole">
            <summary>
            Gets a value indicating whether this instance is black hole.
            </summary>
            <value>
            	<c>true</c> if this instance is black hole; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerLocal.TCPServers">
            <summary>
            Gets the TCP servers.
            </summary>
            <value>
            The TCP servers.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerLocal.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote">
            <summary>
            Represents a common remote peer
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.HostName">
            <summary>
            Gets the name of the host.
            </summary>
            <value>
            The name of the host.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.NetworkContext">
            <summary>
            Gets the network context.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.Distance">
            <summary>
            Gets the distance.
            </summary>
            <value>
            The distance.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.PeerContext">
            <summary>
            Gets the peer context.
            </summary>
            <value>
            The peer context.
            </value>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.PeerType">
            <summary>
            Gets the type of the peer.
            </summary>
            <value>
            The type of the peer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.ReplyTime">
            <summary>
            Gets the reply time.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.ActiveNetworkConnection">
            <summary>
            Gets the active network connection.
            </summary>
            <value>
            The active network connection.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.NetworkConnections">
            <summary>
            Gets the network connections.
            </summary>
            <value>
            The network connections.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.BlackHoleContainer">
            <summary>
            Gets the black hole container.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.TCPServerCollection">
            <summary>
            Gets the TCP servers.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.NATGatewayCollection">
            <summary>
            Gets the NAT gateways.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.Session">
            <summary>
            Gets or sets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.PeerRelationPairs">
            <summary>
            Gets the peer relation pairs.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.InternalPeerContext">
            <summary>
            Gets the peer context.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.CompareTo(Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote)">
            <summary>
            Compares to.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj" />. Zero This instance is equal to <paramref name="obj" />. Greater than zero This instance is greater than <paramref name="obj" />.
            </returns>
            <exception cref="T:System.ArgumentException"><paramref name="obj" /> is not the same type as this instance.</exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.Equals(Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns>True, if the other class is equals with this.</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote.BuildNetworkPeer(System.Boolean,System.String)">
            <summary>
            Builds the network peer.
            </summary>
            <returns>NetworkPeer</returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPair">
            <summary>
            Represents a relation between two network peer
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPair.#ctor(Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote,Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPair"/> class.
            </summary>
            <param name="peerA">The peer A.</param>
            <param name="peerB">The peer B.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPair.PeerA">
            <summary>
            Gets the peer A.
            </summary>
            <value>
            The peer A.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPair.PeerB">
            <summary>
            Gets the peer B.
            </summary>
            <value>
            The peer B.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPair.Connected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPair"/> is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPair.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPair.BuildPeerRelation">
            <summary>
            Builds the peer relation.
            </summary>
            <returns>PeerRelation</returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection">
            <summary>
            Represents the network peer pair collection
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection.PeerRelationPairs">
            <summary>
            Gets the peer relation pairs.
            </summary>
            <value>
            The peer relation pairs.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection.BuildPeerRelationContainer(System.Boolean,System.String)">
            <summary>
            Builds the peer relation container.
            </summary>
            <returns>PeerRelationContainer</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection.AddOrUpdatePeerRelation(Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote,Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote,System.Boolean,System.Boolean@)">
            <summary>
            Adds the or update peer relation.
            </summary>
            <param name="ownerPeer">The owner peer.</param>
            <param name="pairPeer">The pair peer.</param>
            <param name="connected">if set to <c>true</c> [connected].</param>
            <param name="changed">if set to <c>true</c> [changed].</param>
            <returns>PeerRelationPair</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection.AddOrUpdatePeerRelationForce(Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote,Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote,System.Boolean,System.Int64)">
            <summary>
            Adds the or update peer relation.
            </summary>
            <param name="ownerPeer">The owner peer.</param>
            <param name="pairPeer">The pair peer.</param>
            <param name="connected">if set to <c>true</c> [connected].</param>
            <param name="stateId">The state id.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection.SetConnectionOffline(Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote,Forge.Net.TerraGraf.NetworkPeers.NetworkPeerRemote)">
            <summary>
            Sets the connection offline.
            </summary>
            <param name="ownerPeer">The owner peer.</param>
            <param name="pairPeer">The pair peer.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection.SetAllConnectionOffline(System.Boolean)">
            <summary>
            Sets all connection offline.
            </summary>
            <param name="owner">if set to <c>true</c> [owner].</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.PeerRelationPairCollection.Neighborhood">
            <summary>
            Gets the neighborhood.
            </summary>
            <value>
            The neighborhood.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.PeerTypeEnum">
            <summary>
            Represents the type of a peer
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.NetworkPeers.PeerTypeEnum.Local">
            <summary>
            Local host
            </summary>
        </member>
        <member name="F:Forge.Net.TerraGraf.NetworkPeers.PeerTypeEnum.Remote">
            <summary>
            Remote host
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.TCPServer">
            <summary>
            Represents a TCPServer
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServer.#ctor(Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.TCPServer"/> class.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServer.#ctor(System.Int64,Forge.Net.Synapse.AddressEndPoint,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.TCPServer"/> class.
            </summary>
            <param name="serverId">The server id.</param>
            <param name="endPoint">The end point.</param>
            <param name="manuallyStarted">if set to <c>true</c> [manually started].</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.TCPServer.ServerId">
            <summary>
            Gets the server id.
            </summary>
            <value>
            The server id.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.TCPServer.EndPoint">
            <summary>
            Gets the IP end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.TCPServer.Attempts">
            <summary>
            Gets the attempts.
            </summary>
            <value>
            The attempts.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.TCPServer.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.NetworkPeers.TCPServer"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.TCPServer.IsManuallyStarted">
            <summary>
            Gets or sets a value indicating whether this instance is manually started.
            </summary>
            <value>
            	<c>true</c> if this instance is manually started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServer.IncAttempts">
            <summary>
            Increment the attempt number.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServer.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServer.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection">
            <summary>
            Represents a TCPServer collection
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection"/> class.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection.TCPServers">
            <summary>
            Gets the TCP servers. Lock it, if you want to modify the collection.
            </summary>
            <value>
            The TCP servers.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection.StateId">
            <summary>
            Gets or sets the state id.
            </summary>
            <value>
            The state id.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection.BuildServerContainer">
            <summary>
            Builds the server container.
            </summary>
            <returns>ServerContainer</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection.SelectTCPServer">
            <summary>
            Selects the NAT gate way.
            </summary>
            <returns>TCPServer</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection.GetNeverTriedServer">
            <summary>
            Visszaadja az első olyan gateway-t, amit még sosem próbáltunk
            </summary>
            <returns>Kiválasztott szerver vagy null, ha már mindent próbáltunk legalább 1x</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection.GetGoodServer">
            <summary>
            Visszaad egy gateway-t, amin már volt sikeres csatlakoztatás
            </summary>
            <returns>Kiválasztott gateway vagy null, ha nem talált sikeresen csatlakozott gateway-t</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.NetworkPeers.TCPServerCollection.GetLeastTriedServer">
            <summary>
            Visszaadja azt a gateway-t, amit eddig a legkevesebbet próbáltunk.
            Ha mindegyiket egyforma mennyiségben próbáltuk, akkor null-t ad vissza.
            </summary>
            <returns>Kiválasztott gateway vagy null</returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.PeerContextLock">
            <summary>
            Wrapper for lock. This instance cannot be disposed.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.PeerContextLock.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.PeerContextLock"/> class.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.PeerContextLock.IsLocked">
            <summary>
            Gets a value indicating whether this instance is locked.
            </summary>
            <value>
              <c>true</c> if this instance is locked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.PeerContextLock.IsHeldByCurrentThread">
            <summary>
            Gets a value indicating whether this instance is held by current thread.
            </summary>
            <value>
            	<c>true</c> if this instance is held by current thread; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.PeerContextLock.IsDisposed">
            <summary>
            Gets a value indicating whether this <see cref="T:Forge.Threading.ILock"/> is disposed.
            </summary>
            <value>
              <c>true</c> if disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.PeerContextLock.Lock">
            <summary>
            Locks this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.PeerContextLock.TryLock(System.TimeSpan)">
            <summary>
            Tries the lock.
            </summary>
            <param name="timeout">The timeout.</param>
            <returns>True, if the lock was successful</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.PeerContextLock.TryLock(System.Int32)">
            <summary>
            Tries the lock.
            </summary>
            <param name="millisecondsTimeout">The milliseconds timeout.</param>
            <returns>True, if the lock was successful</returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.PeerContextLock.Unlock">
            <summary>
            Unlocks this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.PeerContextLock.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.Socket">
            <summary>
            Socket implementation for TerraGraf
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Socket"/> class.
            </summary>
            <param name="socketType">Type of the socket.</param>
            <param name="protocolType">Type of the protocol.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Forge.Net.TerraGraf.Socket"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.BeginAccept(System.AsyncCallback,System.Object)">
            <summary>
            Begins the accept.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Accept">
            <summary>
            Accepts a new incoming connection.
            </summary>
            <returns>
            Socket implementation
            </returns>
            <exception cref="T:System.Net.Sockets.SocketException"></exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.EndAccept(System.IAsyncResult)">
            <summary>
            Ends the accept.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>
            Socket implementation
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
            <summary>
            Begins the connect.
            </summary>
            <param name="endPoint">The end point.</param>
            <param name="callBack">The call back.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the connect.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="callBack">The call back.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Bind(System.Net.EndPoint)">
            <summary>
            Binds the specified end point.
            </summary>
            <param name="endPoint">The end point.</param>
            <exception cref="T:System.Net.Sockets.SocketException">
            </exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Connect(System.Net.EndPoint)">
            <summary>
            Connects the specified end point.
            </summary>
            <param name="endPoint">The end point.</param>
            <exception cref="T:System.InvalidOperationException">Connect method used for connection-oriented sockets, not for datagrams.</exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            </exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Connect(System.String,System.Int32)">
            <summary>
            Connects the specified host.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.EndConnect(System.IAsyncResult)">
            <summary>
            Ends the connect.
            </summary>
            <param name="asyncResult">The async result.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the receive.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="callBack">The call back.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
            <summary>
            Receives from.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="remoteEp">The remote ep.</param>
            <param name="callBack">The call back.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="callBack">The call back.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.EndPoint,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send to.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="remoteEp">The remote ep.</param>
            <param name="callBack">The call back.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Receive(System.Byte[])">
            <summary>
            Receives the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            Number of received bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Receive(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Receives the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <returns>
            Number of received bytes
            </returns>
            <exception cref="T:System.Net.Sockets.SocketException">
            </exception>
            <exception cref="T:System.InvalidOperationException">Socket not connected.</exception>
            <exception cref="T:System.TimeoutException">Receive timed out.</exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
            <summary>
            Receives from.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of received bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.EndPoint@)">
            <summary>
            Receives from.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of received bytes
            </returns>
            <exception cref="T:System.InvalidOperationException">This socket is not connection-less oriented type (UDP).</exception>
            <exception cref="T:System.Net.Sockets.SocketException"></exception>
            <exception cref="T:System.TimeoutException">Receive timed out.</exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Send(System.Byte[])">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <returns>
            Number of sent bytes
            </returns>
            <exception cref="T:System.Net.Sockets.SocketException">
            </exception>
            <exception cref="T:System.TimeoutException">
            Send timed out.
            or
            Data sending timed out.
            or
            Send timed out.
            or
            Send timed out.
            </exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
            <summary>
            Sends to.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.EndPoint)">
            <summary>
            Sends to.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of sent bytes
            </returns>
            <exception cref="T:System.InvalidOperationException">
            This socket is not connection-less oriented type (UDP).
            or
            This socket instance cannot send or receive broadcast packets.
            or
            This socket instance sends or receives broadcast packets.
            </exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.TimeoutException">
            Send timed out.
            or
            Data sending timed out.
            or
            Send timed out.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            </exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.EndReceive(System.IAsyncResult)">
            <summary>
            Ends the receive.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>
            Number of received bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
            <summary>
            Ends the receive from.
            </summary>
            <param name="asyncResult">The async result.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of received bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.EndSend(System.IAsyncResult)">
            <summary>
            Ends the send.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.EndSendTo(System.IAsyncResult)">
            <summary>
            Ends the send to.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Listen(System.Int32)">
            <summary>
            Listens the specified backlog.
            </summary>
            <param name="backlog">The maximum size of the connection request queue.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Pool(System.Int32,System.Net.Sockets.SelectMode)">
            <summary>
            Detect the status of the socket
            </summary>
            <param name="microSeconds">The micro seconds.</param>
            <param name="selectMode">The select mode.</param>
            <returns>
            True, if select mode state is valid
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.SetKeepAliveValues(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Sets the keep alive values.
            </summary>
            <param name="state">if set to <c>true</c> [state].</param>
            <param name="keepAliveTime">The keep alive time.</param>
            <param name="keepAliveInterval">The keep alive interval.</param>
            <returns>
            value
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Close(System.Int32)">
            <summary>
            Close the socket and wait for the specified time.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
            <summary>
            Shutdowns the socket.
            </summary>
            <param name="how">The how.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.Available">
            <summary>
            Gets the available.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.Connected">
            <summary>
            Gets a value indicating whether this <see cref="T:Forge.Net.Synapse.NetworkServices.ISocket"/> is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.EnableBroadcast">
            <summary>
            Gets or sets a value indicating whether [enable broadcast].
            </summary>
            <value>
              <c>true</c> if [enable broadcast]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.ExclusiveAddressUse">
            <summary>
            Gets or sets a value indicating whether [exclusive address use].
            </summary>
            <value>
              <c>true</c> if [exclusive address use]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.IsBound">
            <summary>
            Gets a value indicating whether this instance is bound.
            </summary>
            <value>
              <c>true</c> if this instance is bound; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.LocalEndPoint">
            <summary>
            Gets the local end point.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.AddressFamily">
            <summary>
            Gets the address family.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.NoDelay">
            <summary>
            Gets or sets a value indicating whether [no delay].
            </summary>
            <value>
              <c>true</c> if [no delay]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.ReceiveBufferSize">
            <summary>
            Gets or sets the size of the receive buffer.
            </summary>
            <value>
            The size of the receive buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout.
            </summary>
            <value>
            The receive timeout.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.RemoteEndPoint">
            <summary>
            Gets or sets the remote end point.
            </summary>
            <value>
            The remote end point.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.SendBufferSize">
            <summary>
            Gets or sets the size of the send buffer.
            </summary>
            <value>
            The size of the send buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.SendTimeout">
            <summary>
            Gets or sets the send timeout.
            </summary>
            <value>
            The send timeout.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.ProtocolType">
            <summary>
            Gets the type of the protocol.
            </summary>
            <value>
            The type of the protocol.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.SocketType">
            <summary>
            Gets the type of the socket.
            </summary>
            <value>
            The type of the socket.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.Ttl">
            <summary>
            Gets or sets the Time-to-live value.
            </summary>
            <value>
            The TTL.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.LocalSocketId">
            <summary>
            Gets the local socket id.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.IsListening">
            <summary>
            Gets a value indicating whether this instance is listening.
            </summary>
            <value>
            	<c>true</c> if this instance is listening; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.InternalProcessSocketOpenRequest(Forge.Net.TerraGraf.Messaging.SocketOpenRequestMessage)">
            <summary>
            Process socket open request.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.InternalProcessSocketOpenResponse(Forge.Net.TerraGraf.Messaging.SocketOpenResponseMessage)">
            <summary>
            Process socket open response.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.InternalProcessSocketClose(Forge.Net.TerraGraf.Messaging.SocketCloseMessage)">
            <summary>
            Process socket close.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.InternalProcessRawData(Forge.Net.TerraGraf.Messaging.SocketRawDataMessage)">
            <summary>
            Internals the process raw data.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.IncomingConnection.#ctor(Forge.Net.TerraGraf.Messaging.SocketOpenRequestMessage,Forge.Net.TerraGraf.Socket)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.Socket.IncomingConnection" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="serverSocket">The server socket.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.IncomingConnection.TimeoutEvent">
            <summary>
            Gets the timeout event.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.IncomingConnection.Stopwatch">
            <summary>
            Gets the stopwatch.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.IncomingConnection.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.IncomingConnection.Accepted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.Socket.IncomingConnection"/> is accepted.
            </summary>
            <value>
              <c>true</c> if accepted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.Socket.IncomingConnection.Timedout">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.Socket.IncomingConnection"/> is timedout.
            </summary>
            <value>
              <c>true</c> if timedout; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.IncomingConnection.WaitForAcceptOrTimeout(System.Int32)">
            <summary>
            Waits for accept or timeout.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.ReceivedMessage.CompareTo(Forge.Net.TerraGraf.Socket.ReceivedMessage)">
            <summary>
            Compares to.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.ReceivedMessage.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.ReceivedMessage.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.ReceivedMessage.Equals(Forge.Net.TerraGraf.Socket.ReceivedMessage)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.Socket.ReceivedMessage.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.SocketSafeHandle">
            <summary>
            Implementation of a safe socket handler
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.SocketSafeHandle.#ctor(Forge.Net.TerraGraf.Socket)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.SocketSafeHandle"/> class.
            </summary>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.SocketSafeHandle.Pool(System.Int32,System.Net.Sockets.SelectMode)">
            <summary>
            Detect the status of the socket
            </summary>
            <param name="microSeconds">The micro seconds.</param>
            <param name="selectMode">The select mode.</param>
            <returns>
            True, if the conditions match with select mode
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.SocketSafeHandle.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.SocketSafeHandle.Close(System.Int32)">
            <summary>
            Close the socket and wait for the specified time.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.AddressFamily">
            <summary>
            Gets the address family.
            </summary>
            <value>
            The address family.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.Connected">
            <summary>
            Gets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.ISocketSafeHandle" /> is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.EnableBroadcast">
            <summary>
            Gets or sets a value indicating whether [enable broadcast].
            </summary>
            <value>
              <c>true</c> if [enable broadcast]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.IsBound">
            <summary>
            Gets a value indicating whether this instance is bound.
            </summary>
            <value>
              <c>true</c> if this instance is bound; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.LocalEndPoint">
            <summary>
            Gets the local end point.
            </summary>
            <value>
            The local end point.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.NoDelay">
            <summary>
            Gets or sets a value indicating whether [no delay].
            </summary>
            <value>
              <c>true</c> if [no delay]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.ReceiveBufferSize">
            <summary>
            Gets or sets the size of the receive buffer.
            </summary>
            <value>
            The size of the receive buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout.
            </summary>
            <value>
            The receive timeout.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.RemoteEndPoint">
            <summary>
            Gets or sets the remote end point.
            </summary>
            <value>
            The remote end point.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.SendBufferSize">
            <summary>
            Gets or sets the size of the send buffer.
            </summary>
            <value>
            The size of the send buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.SendTimeout">
            <summary>
            Gets or sets the send timeout.
            </summary>
            <value>
            The send timeout.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.ProtocolType">
            <summary>
            Gets the type of the protocol.
            </summary>
            <value>
            The type of the protocol.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.SocketType">
            <summary>
            Gets the type of the socket.
            </summary>
            <value>
            The type of the socket.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.SocketSafeHandle.Ttl">
            <summary>
            Gets or sets the TTL.
            </summary>
            <value>
            The TTL.
            </value>
        </member>
        <member name="T:Forge.Net.TerraGraf.TcpClient">
            <summary>
            Represents a TCP client
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.TcpClient"/> class.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.TcpClient"/> class.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.#ctor(Forge.Net.TerraGraf.Socket)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.TcpClient"/> class.
            </summary>
            <param name="acceptedSocket">The accepted socket.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpClient.Available">
            <summary>
            Gets the available.
            </summary>
            <value>
            The available bytes.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpClient.Client">
            <summary>
            Gets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpClient.Connected">
            <summary>
            Gets a value indicating whether this <see cref="T:Forge.Net.TerraGraf.TcpClient"/> is connected.
            </summary>
            <value>
              <c>true</c> if connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpClient.ExclusiveAddressUse">
            <summary>
            Gets or sets a value indicating whether [exclusive address use].
            </summary>
            <value>
              <c>true</c> if [exclusive address use]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpClient.NoDelay">
            <summary>
            Gets a value indicating whether [no delay].
            </summary>
            <value>
              <c>true</c> if [no delay]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpClient.ReceiveBufferSize">
            <summary>
            Gets or sets the size of the receive buffer.
            </summary>
            <value>
            The size of the receive buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpClient.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout.
            </summary>
            <value>
            The receive timeout.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpClient.SendBufferSize">
            <summary>
            Gets or sets the size of the send buffer.
            </summary>
            <value>
            The size of the send buffer.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpClient.SendTimeout">
            <summary>
            Gets or sets the send timeout.
            </summary>
            <value>
            The send timeout.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the connect.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.BeginConnect(Forge.Net.Synapse.AddressEndPoint,System.AsyncCallback,System.Object)">
            <summary>
            Begins the connect.
            </summary>
            <param name="localEp">The local ep.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.Connect(System.String,System.Int32)">
            <summary>
            Connects the specified host.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.EndConnect(System.IAsyncResult)">
            <summary>
            Ends the connect.
            </summary>
            <param name="asyncResult">The async result.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.Connect(Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Connects the specified local ep.
            </summary>
            <param name="localEp">The local ep.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.GetStream">
            <summary>
            Gets the stream.
            </summary>
            <returns>
            Network Stream instance
            </returns>
            <exception cref="T:System.InvalidOperationException">Socket not connected.</exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.TcpListener">
            <summary>
            Tcp listener implementation
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.TcpListener"/> class.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpListener.ExclusiveAddressUse">
            <summary>
            Gets or sets a value indicating whether [exclusive address use].
            </summary>
            <value>
              <c>true</c> if [exclusive address use]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpListener.Server">
            <summary>
            Gets the server socket.
            </summary>
            <value>
            The server.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.TcpListener.LocalEndpoint">
            <summary>
            Gets the local endpoint.
            </summary>
            <value>
            The local endpoint.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
            <summary>
            Begins the accept socket.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
            <exception cref="T:System.InvalidOperationException">TCP Listener is not active.</exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.AcceptSocket">
            <summary>
            Accepts the socket.
            </summary>
            <returns>
            Socket implementation
            </returns>
            <exception cref="T:System.InvalidOperationException">Listener not active.</exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.EndAcceptSocket(System.IAsyncResult)">
            <summary>
            Ends the accept socket.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>
            Socket implementation
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
            <summary>
            Begins the accept TCP client.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
            <exception cref="T:System.InvalidOperationException">TCP Listener is not active.</exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.AcceptTcpClient">
            <summary>
            Accepts the TCP client.
            </summary>
            <returns>
            TcpClient implementation
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
            <summary>
            Ends the accept TCP client.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>
            TcpClient implementation
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.Pending">
            <summary>
            Pendings this instance.
            </summary>
            <returns>
            True, if an incoming connection is waiting
            </returns>
            <exception cref="T:System.InvalidOperationException">Listener not active.</exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.Start(System.Int32)">
            <summary>
            Starts the specified backlog.
            </summary>
            <param name="backlog">The backlog.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.TcpListener.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="T:Forge.Net.TerraGraf.TerraGrafNetworkFactory">
            <summary>
            Represents the synapse network factory for TerraGraf
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.TerraGrafNetworkFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.TerraGrafNetworkFactory" /> class.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.TerraGrafNetworkFactory.CreateTcpListener(System.Int32)">
            <summary>
            Creates the TCP listener.
            </summary>
            <param name="port">The port.</param>
            <returns>
            TcpListener implementation
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.TerraGrafNetworkFactory.CreateTcpListener(Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Creates the TCP listener.
            </summary>
            <param name="endPoint">The end point.</param>
            <returns>
            TcpListener implementation
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.TerraGrafNetworkFactory.CreateTcpClient">
            <summary>
            Creates the TCP client.
            </summary>
            <returns>
            TcpClient implementation
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.TerraGrafNetworkFactory.CreateUdpClient">
            <summary>
            Creates the UDP client.
            </summary>
            <returns>
            UdpClient implementation
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.TerraGrafNetworkFactory.CreateUdpClient(System.Int32)">
            <summary>
            Creates the UDP client.
            </summary>
            <param name="port">The port.</param>
            <returns>
            UdpClient implementation
            </returns>
        </member>
        <member name="T:Forge.Net.TerraGraf.UdpClient">
            <summary>
            Represents an UDP client
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.UdpClient"/> class.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.TerraGraf.UdpClient"/> class.
            </summary>
            <param name="port">The port where this instance will listen.</param>
        </member>
        <member name="P:Forge.Net.TerraGraf.UdpClient.Available">
            <summary>
            Gets the available.
            </summary>
            <value>
            The available.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.UdpClient.Client">
            <summary>
            Gets the underlying socket.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.UdpClient.EnableBroadcast">
            <summary>
            Gets or sets a value indicating whether [enable broadcast].
            </summary>
            <value>
              <c>true</c> if [enable broadcast]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Forge.Net.TerraGraf.UdpClient.Ttl">
            <summary>
            Gets or sets the TTL.
            </summary>
            <value>
            The TTL.
            </value>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
            <summary>
            Begins the receive.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Receive(Forge.Net.Synapse.AddressEndPoint@)">
            <summary>
            Receives the specified remote ep.
            </summary>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of received bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.EndReceive(System.IAsyncResult,Forge.Net.Synapse.AddressEndPoint@)">
            <summary>
            Ends the receive.
            </summary>
            <param name="asyncResult">The async result.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of received bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginSend(System.Byte[],System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="size">The size.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginSend(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginSend(System.Byte[],Forge.Net.Synapse.AddressEndPoint,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="remoteEp">The remote ep.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginSend(System.Byte[],System.Int32,Forge.Net.Synapse.AddressEndPoint,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="size">The size.</param>
            <param name="remoteEp">The remote ep.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginSend(System.Byte[],System.Int32,System.Int32,Forge.Net.Synapse.AddressEndPoint,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="remoteEp">The remote ep.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginSend(System.Byte[],System.String,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="hostName">Name of the host.</param>
            <param name="port">The port.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="size">The size.</param>
            <param name="hostName">Name of the host.</param>
            <param name="port">The port.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.BeginSend(System.Byte[],System.Int32,System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins the send.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="hostName">Name of the host.</param>
            <param name="port">The port.</param>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
            <returns>
            Async property
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.EndSend(System.IAsyncResult)">
            <summary>
            Ends the receive.
            </summary>
            <param name="asyncResult">The async result.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.EndSend(System.IAsyncResult,Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Ends the send.
            </summary>
            <param name="asyncResult">The async result.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Send(System.Byte[])">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Send(System.Byte[],System.Int32)">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="size">The size.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <returns>
            Number of sent bytes
            </returns>
            <exception cref="T:System.InvalidOperationException">Socket not connected.</exception>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Send(System.Byte[],Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Send(System.Byte[],System.Int32,Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="size">The size.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Send(System.Byte[],System.Int32,System.Int32,Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="remoteEp">The remote ep.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Send(System.Byte[],System.String,System.Int32)">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="hostName">Name of the host.</param>
            <param name="port">The port.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="size">The size.</param>
            <param name="hostName">Name of the host.</param>
            <param name="port">The port.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Send(System.Byte[],System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Sends the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="hostName">Name of the host.</param>
            <param name="port">The port.</param>
            <returns>
            Number of sent bytes
            </returns>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Connect(System.Int32)">
            <summary>
            Bind the socket to the specified port and receives UDP datagrams.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Connect(Forge.Net.Synapse.AddressEndPoint)">
            <summary>
            Bind the socket to the specified port and receives UDP datagrams from the specified network peer.
            </summary>
            <param name="localEp">The local ep.</param>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Forge.Net.TerraGraf.UdpClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
    </members>
</doc>
