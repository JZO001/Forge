<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Forge.Net.Services</name>
    </assembly>
    <members>
        <member name="T:Forge.Net.Services.ConfigSection.NetworkServiceConfiguration">
            <summary>
            Configuration access helper class for Network Services
            </summary>
        </member>
        <member name="M:Forge.Net.Services.ConfigSection.NetworkServiceConfiguration.#cctor">
            <summary>
            Initializes the <see cref="T:Forge.Net.Services.ConfigSection.NetworkServiceConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Forge.Net.Services.ConfigSection.NetworkServiceConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.ConfigSection.NetworkServiceConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Forge.Net.Services.ConfigSection.NetworkServiceSection">
            <summary>
            Configuration section for Network Services
            </summary>
        </member>
        <member name="M:Forge.Net.Services.ConfigSection.NetworkServiceSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.ConfigSection.NetworkServiceSection"/> class.
            </summary>
        </member>
        <member name="T:Forge.Net.Services.IServiceDescriptor">
            <summary>
            Represents a service descriptor factory
            </summary>
        </member>
        <member name="M:Forge.Net.Services.IServiceDescriptor.CreateServiceProperty">
            <summary>
            Creates the service property.
            </summary>
            <returns>Properties of the service</returns>
        </member>
        <member name="T:Forge.Net.Services.Locators.IRemoteServiceLocator`1">
            <summary>
            Represents the base services of a service locator
            </summary>
            <typeparam name="TIProxyType">Generic proxy type.</typeparam>
        </member>
        <member name="E:Forge.Net.Services.Locators.IRemoteServiceLocator`1.EventServiceStateChanged">
            <summary>
            Occurs when [event service state changed].
            </summary>
        </member>
        <member name="E:Forge.Net.Services.Locators.IRemoteServiceLocator`1.EventAvailableServiceProvidersChanged">
            <summary>
            Occurs when [event available service providers changed].
            </summary>
        </member>
        <member name="E:Forge.Net.Services.Locators.IRemoteServiceLocator`1.EventPreferedServiceProviderChanged">
            <summary>
            Occurs when [event prefered service provider changed].
            </summary>
        </member>
        <member name="P:Forge.Net.Services.Locators.IRemoteServiceLocator`1.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.IRemoteServiceLocator`1.ChannelId">
            <summary>
            Gets the channel id.
            </summary>
            <value>
            The channel id.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.IRemoteServiceLocator`1.ServiceState">
            <summary>
            Gets the state of the service.
            </summary>
            <value>
            The state of the service.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.IRemoteServiceLocator`1.AvailableServiceProviders">
            <summary>
            Gets the available service providers.
            </summary>
            <value>
            The available service providers.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.IRemoteServiceLocator`1.PreferedServiceProvider">
            <summary>
            Gets the prefered service provider.
            </summary>
            <value>
            The prefered service provider.
            </value>
        </member>
        <member name="M:Forge.Net.Services.Locators.IRemoteServiceLocator`1.GetProxy">
            <summary>
            Gets the proxy.
            </summary>
            <returns>Proxy instance</returns>
        </member>
        <member name="T:Forge.Net.Services.Locators.PreferedServiceProviderChangedEventArgs">
            <summary>
            Represents the prefered service provider event argument
            </summary>
        </member>
        <member name="M:Forge.Net.Services.Locators.PreferedServiceProviderChangedEventArgs.#ctor(Forge.Net.Services.Locators.ServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.Locators.PreferedServiceProviderChangedEventArgs" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="P:Forge.Net.Services.Locators.PreferedServiceProviderChangedEventArgs.PreferedServiceProvider">
            <summary>
            Gets the prefered service provider.
            </summary>
            <value>
            The prefered service provider.
            </value>
        </member>
        <member name="T:Forge.Net.Services.Locators.RemoteServiceLocator`3">
            <summary>
            Base implementation for remote service locators
            </summary>
            <typeparam name="TIProxyType">The type of the I proxy type.</typeparam>
            <typeparam name="TProxyImplementationType">The type of the proxy impl type.</typeparam>
            <typeparam name="TLocatorType">The type of the locator type.</typeparam>
        </member>
        <member name="F:Forge.Net.Services.Locators.RemoteServiceLocator`3.mPeersVsProviders">
            <summary>
            The peers vs providers
            </summary>
        </member>
        <member name="F:Forge.Net.Services.Locators.RemoteServiceLocator`3.LOGGER">
            <summary>
            Logger
            </summary>
        </member>
        <member name="F:Forge.Net.Services.Locators.RemoteServiceLocator`3.LOG_PREFIX">
            <summary>
            Log prefix for log messages
            </summary>
        </member>
        <member name="E:Forge.Net.Services.Locators.RemoteServiceLocator`3.EventServiceStateChanged">
            <summary>
            Occurs when [event service state changed].
            </summary>
        </member>
        <member name="E:Forge.Net.Services.Locators.RemoteServiceLocator`3.EventAvailableServiceProvidersChanged">
            <summary>
            Occurs when [event available service providers changed].
            </summary>
        </member>
        <member name="E:Forge.Net.Services.Locators.RemoteServiceLocator`3.EventPreferedServiceProviderChanged">
            <summary>
            Occurs when [event prefered service provider changed].
            </summary>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.Locators.RemoteServiceLocator`3"/> class.
            </summary>
            <param name="locatorId">The locator id.</param>
        </member>
        <member name="P:Forge.Net.Services.Locators.RemoteServiceLocator`3.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.RemoteServiceLocator`3.ChannelId">
            <summary>
            Gets or sets the channel id.
            </summary>
            <value>
            The channel id.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.RemoteServiceLocator`3.ServiceState">
            <summary>
            Gets the state of the service.
            </summary>
            <value>
            The state of the service.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.RemoteServiceLocator`3.AvailableServiceProviders">
            <summary>
            Gets the available service providers.
            </summary>
            <value>
            The available service providers.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.RemoteServiceLocator`3.PreferedServiceProvider">
            <summary>
            Gets or sets the prefered service provider.
            </summary>
            <value>
            The prefered service provider.
            </value>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.Start">
            <summary>
            Initializes this instance.
            </summary>
            <returns>
            Manager State
            </returns>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.Stop">
            <summary>
            Stops this instance.
            </summary>
            <returns>
            Manager State
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.GetProxy">
            <summary>
            Gets the proxy.
            </summary>
            <returns>Proxy instance</returns>
            <exception cref="T:Forge.InitializationException"></exception>
            <exception cref="T:Forge.Net.Services.ServiceNotAvailableException"></exception>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.OnServiceStateChanged(Forge.Net.Services.ServiceStateEnum)">
            <summary>
            Called when [service state changed].
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.OnAvailableServiceProviderChanged(Forge.Collections.ListSpecialized{Forge.Net.Services.Locators.ServiceProvider})">
            <summary>
            Called when [available service provider changed].
            </summary>
            <param name="serviceProviders">The service providers.</param>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.OnPreferedServiceProviderChanged(Forge.Net.Services.Locators.ServiceProvider)">
            <summary>
            Called when [prefered service provider changed].
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.LookUpChannel">
            <summary>
            Looks up channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.FindService">
            <summary>
            Finds the service providers.
            </summary>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocator`3.CheckServiceAvailable(Forge.Net.TerraGraf.NetworkPeers.INetworkPeer)">
            <summary>
            Checks the service available.
            </summary>
            <param name="peer">The peer.</param>
            <returns></returns>
        </member>
        <member name="T:Forge.Net.Services.Locators.RemoteServiceLocatorManager">
            <summary>
            Managing the remote service locators
            </summary>
        </member>
        <member name="M:Forge.Net.Services.Locators.RemoteServiceLocatorManager.GetServiceLocator``2">
            <summary>
            Gets the service locator.
            </summary>
            <typeparam name="TIProxyType">The type of the I proxy type.</typeparam>
            <typeparam name="TLocatorType">The type of the locator type.</typeparam>
            <returns></returns>
        </member>
        <member name="T:Forge.Net.Services.Locators.ServiceProvider">
            <summary>
            Represents a service provider descriptor
            </summary>
        </member>
        <member name="M:Forge.Net.Services.Locators.ServiceProvider.#ctor(Forge.Net.TerraGraf.NetworkPeers.INetworkPeer,Forge.Net.Synapse.AddressEndPoint,System.Int64,System.Collections.Generic.Dictionary{System.String,Forge.Configuration.PropertyItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.Locators.ServiceProvider" /> class.
            </summary>
            <param name="peer">The peer.</param>
            <param name="ep">The ep.</param>
            <param name="priority">The priority.</param>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:Forge.Net.Services.Locators.ServiceProvider.NetworkPeer">
            <summary>
            Gets the network peer.
            </summary>
            <value>
            The network peer.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.ServiceProvider.RemoteEndPoint">
            <summary>
            Gets or sets the remote end point.
            </summary>
            <value>
            The remote end point.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.ServiceProvider.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Locators.ServiceProvider.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="M:Forge.Net.Services.Locators.ServiceProvider.CompareTo(System.Int64)">
            <summary>
            Compares to.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Forge.Net.Services.Locators.ServiceProvider.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj" />. Zero This instance is equal to <paramref name="obj" />. Greater than zero This instance is greater than <paramref name="obj" />.
            </returns>
        </member>
        <member name="T:Forge.Net.Services.Locators.ServiceProvidersChangedEventArgs">
            <summary>
            Represents the list of service providers of an event
            </summary>
        </member>
        <member name="M:Forge.Net.Services.Locators.ServiceProvidersChangedEventArgs.#ctor(Forge.Collections.ListSpecialized{Forge.Net.Services.Locators.ServiceProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.Locators.ServiceProvidersChangedEventArgs"/> class.
            </summary>
            <param name="serviceProviders">The service providers.</param>
        </member>
        <member name="P:Forge.Net.Services.Locators.ServiceProvidersChangedEventArgs.ServiceProviders">
            <summary>
            Gets the service providers.
            </summary>
            <value>
            The service providers.
            </value>
        </member>
        <member name="T:Forge.Net.Services.Locators.ServiceStateChangedEventArgs">
            <summary>
            Represents the arguments of an event
            </summary>
        </member>
        <member name="M:Forge.Net.Services.Locators.ServiceStateChangedEventArgs.#ctor(Forge.Net.Services.ServiceStateEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.Locators.ServiceStateChangedEventArgs"/> class.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="P:Forge.Net.Services.Locators.ServiceStateChangedEventArgs.ServiceState">
            <summary>
            Gets the state of the service.
            </summary>
            <value>
            The state of the service.
            </value>
        </member>
        <member name="T:Forge.Net.Services.ServiceNotAvailableException">
            <summary>
            Occurs when service is not available
            </summary>
        </member>
        <member name="M:Forge.Net.Services.ServiceNotAvailableException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.ServiceNotAvailableException"/> class.
            </summary>
        </member>
        <member name="M:Forge.Net.Services.ServiceNotAvailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.ServiceNotAvailableException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.Net.Services.ServiceNotAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.ServiceNotAvailableException" /> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Forge.Net.Services.ServiceNotAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.ServiceNotAvailableException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Forge.Net.Services.ServiceStateEnum">
            <summary>
            Represents the state of a service
            </summary>
        </member>
        <member name="F:Forge.Net.Services.ServiceStateEnum.Unavailable">
            <summary>
            The service is unavailable
            </summary>
        </member>
        <member name="F:Forge.Net.Services.ServiceStateEnum.Available">
            <summary>
            The service is available
            </summary>
        </member>
        <member name="T:Forge.Net.Services.Services.IRemoteService">
            <summary>
            Base services for a remote service
            </summary>
        </member>
        <member name="P:Forge.Net.Services.Services.IRemoteService.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Services.IRemoteService.Priority">
            <summary>
            Gets or sets the priority of this service instance.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Services.IRemoteService.ServiceDescriptor">
            <summary>
            Gets the service descriptor.
            </summary>
            <value>
            The service descriptor.
            </value>
        </member>
        <member name="M:Forge.Net.Services.Services.IRemoteService.Start(System.Int64)">
            <summary>
            Starts this instance with the specified priority.
            </summary>
            <param name="priority">The priority.</param>
            <returns>Manager State</returns>
        </member>
        <member name="M:Forge.Net.Services.Services.IRemoteService.Start(System.Int64,Forge.Net.Services.IServiceDescriptor)">
            <summary>
            Starts the specified priority.
            </summary>
            <param name="priority">The priority.</param>
            <param name="serviceDescriptor">The service descriptor.</param>
            <returns>Manager State</returns>
        </member>
        <member name="T:Forge.Net.Services.Services.RemoteServiceBase`3">
            <summary>
            Base implementation for remote services
            </summary>
            <typeparam name="TIServiceProxyType">The type of the I service proxy type.</typeparam>
            <typeparam name="TServiceProxyImplementationType">The type of the service proxy impl type.</typeparam>
            <typeparam name="TServiceType">The type of the service type.</typeparam>
        </member>
        <member name="F:Forge.Net.Services.Services.RemoteServiceBase`3.LOGGER">
            <summary>
            Logger
            </summary>
        </member>
        <member name="F:Forge.Net.Services.Services.RemoteServiceBase`3.LOG_PREFIX">
            <summary>
            Log prefix for log messages
            </summary>
        </member>
        <member name="F:Forge.Net.Services.Services.RemoteServiceBase`3.mPriority">
            <summary>
            Priority of the service
            </summary>
        </member>
        <member name="F:Forge.Net.Services.Services.RemoteServiceBase`3.mServiceDescriptor">
            <summary>
            The service descriptor
            </summary>
        </member>
        <member name="M:Forge.Net.Services.Services.RemoteServiceBase`3.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RemoteServiceBase class.
            </summary>
            <param name="serviceId">The service id.</param>
        </member>
        <member name="P:Forge.Net.Services.Services.RemoteServiceBase`3.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Services.RemoteServiceBase`3.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Forge.Net.Services.Services.RemoteServiceBase`3.Priority">
            <summary>
            Gets or sets the priority of this service instance.
            </summary>
            <value>
            The priority.
            </value>
            <exception cref="T:Forge.Net.Services.ServiceNotAvailableException"></exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Forge.Net.Services.Services.RemoteServiceBase`3.ServiceDescriptor">
            <summary>
            Gets the service descriptor.
            </summary>
            <value>
            The service descriptor.
            </value>
            <exception cref="T:Forge.Net.Services.ServiceNotAvailableException"></exception>
        </member>
        <member name="P:Forge.Net.Services.Services.RemoteServiceBase`3.ChannelId">
            <summary>
            Gets or sets the channel id.
            </summary>
            <value>
            The channel id.
            </value>
        </member>
        <member name="M:Forge.Net.Services.Services.RemoteServiceBase`3.Start">
            <summary>
            Starts this instance.
            </summary>
            <returns>
            Manager State
            </returns>
        </member>
        <member name="M:Forge.Net.Services.Services.RemoteServiceBase`3.Start(System.Int64)">
            <summary>
            Starts this instance with the specified priority.
            </summary>
            <param name="priority">The priority.</param>
            <returns>
            Manager State
            </returns>
        </member>
        <member name="M:Forge.Net.Services.Services.RemoteServiceBase`3.Start(System.Int64,Forge.Net.Services.IServiceDescriptor)">
            <summary>
            Starts this instance with the specified priority.
            </summary>
            <param name="priority">The priority.</param>
            <param name="serviceDescriptor">The service descriptor.</param>
            <returns>
            Manager State
            </returns>
            <exception cref="T:Forge.Configuration.Shared.InvalidConfigurationException"></exception>
            <exception cref="T:Forge.Configuration.Shared.InvalidConfigurationException"></exception>
        </member>
        <member name="M:Forge.Net.Services.Services.RemoteServiceBase`3.Stop">
            <summary>
            Stops this instance.
            </summary>
            <returns>
            Manager State
            </returns>
        </member>
        <member name="M:Forge.Net.Services.Services.RemoteServiceBase`3.LookUpChannel">
            <summary>
            Looks up channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Forge.Net.Services.Services.RemoteServiceBase`3.RegisterToPeerContext(Forge.Net.Remoting.Channels.Channel,System.Int64,Forge.Net.Services.IServiceDescriptor)">
            <summary>
            Registers to peer context.
            </summary>
            <param name="channel">The channel.</param>
            <param name="priority">The priority.</param>
            <param name="serviceDescriptor">The service descriptor.</param>
        </member>
        <member name="T:Forge.Net.Services.UnableToStartServiceException">
            <summary>
            Occurs when a service cannot start
            </summary>
        </member>
        <member name="M:Forge.Net.Services.UnableToStartServiceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.UnableToStartServiceException" /> class.
            </summary>
        </member>
        <member name="M:Forge.Net.Services.UnableToStartServiceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.UnableToStartServiceException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Forge.Net.Services.UnableToStartServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.UnableToStartServiceException" /> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Forge.Net.Services.UnableToStartServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Forge.Net.Services.UnableToStartServiceException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
    </members>
</doc>
